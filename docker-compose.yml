version: '3.8'
services:
  api:
    image: mendersoftware/mantra-api:master
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: mantra-api
    ports:
      - "7374:7374"
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
  db:
    image: bitnami/postgresql:12.2.0
    container_name: mantra-db
    ports:
      # note: exposing port 5432 here causes issues in travis builds
      - "5432"
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_DB: mantra-db
    healthcheck:
      test: pg_isready --user=postgres --dbname=mantra-db || exit 1
      interval: 10s
      timeout: 5s
      retries: 10
  postgraphile:
    image: mendersoftware/postgraphile # Extended with many-to-many relations
    build:
      context: ./postgraphile
      dockerfile: Dockerfile
    container_name: postgraphile
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "5433:5433"
    command:
      [
        '--connection',
        'postgres://postgres:password@db:5432/mantra-db',
        '--port',
        '5433',
        '--schema',
        'public',
        '--enhance-graphiql',
        '--append-plugins',
        '@graphile-contrib/pg-many-to-many',
      ]
  ui:
    image: mendersoftware/mantra-ui:master
    build:
      context: ./ui
      dockerfile: Dockerfile
    container_name: mantra-ui
    environment:
      - AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
      - AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
      - GITLAB_TOKEN=$GITLAB_TOKEN
    ports:
      - "8080:80"
    depends_on:
      - api
  gateway:
    image: nginx:stable-alpine
    container_name: mantra-gateway
    entrypoint: >
      /bin/sh -c 'echo " events {} http {
        server {
          location / {
            proxy_max_temp_file_size 128m;
            proxy_buffers 16 16k;
            proxy_buffer_size 16k;
            proxy_pass http://ui:80;
          }
          location ~* /api/(.*) {
            proxy_max_temp_file_size 128m;
            proxy_buffers 16 16k;
            proxy_buffer_size 16k;
            rewrite ^/api(.*)$$ \$$1 break;
            proxy_pass http://api:7374;
          }
          location ~* /graph(i?)ql(.*) {
            proxy_max_temp_file_size 128m;
            proxy_buffers 16 16k;
            proxy_buffer_size 16k;
            proxy_pass http://postgraphile:5433;
          }
        }
      }" > /etc/nginx/nginx.conf && nginx -g "daemon off;" '
    ports:
      # The HTTP port
      - "80:80"
    depends_on:
      - ui
      - api
