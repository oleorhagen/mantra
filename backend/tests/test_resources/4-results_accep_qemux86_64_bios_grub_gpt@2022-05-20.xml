<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite errors="49" failures="4" hostname="runner-kzzanpnu-project-12501706-concurrent-0" name="pytest" skipped="29" tests="168" time="6838.539" timestamp="2022-05-20T01:53:09.100679"><testcase classname="test_bootimg.TestBootImg" name="test_bootimg_creation" time="515.336" /><testcase classname="test_build.TestBuild" name="test_default_server_certificate" time="0.024" /><testcase classname="test_build.TestBuild" name="test_certificate_split" time="10.113" /><testcase classname="test_build.TestBuild" name="test_bootloader_embed" time="0.002"><skipped message="no supported filesystem in tar.bz2, ext4, mender, mender.bmap, gptimg, gptimg.bmap, gptimg.bz2, ext4 (supports sdimg)" type="pytest.skip">/builds/Northern.tech/Mender/meta-mender/tests/acceptance/image-tests/tests/utils/fixtures/fixtures.py:595: no supported filesystem in tar.bz2, ext4, mender, mender.bmap, gptimg, gptimg.bmap, gptimg.bz2, ext4 (supports sdimg)</skipped></testcase><testcase classname="test_build.TestBuild" name="test_image_rootfs_extra_space" time="148.764" /><testcase classname="test_build.TestBuild" name="test_tenant_token" time="174.828" /><testcase classname="test_build.TestBuild" name="test_artifact_signing_keys" time="195.986" /><testcase classname="test_build.TestBuild" name="test_state_scripts" time="172.836" /><testcase classname="test_build.TestBuild" name="test_preferred_versions[mender-client-3.2.0]" time="62.938" /><testcase classname="test_build.TestBuild" name="test_preferred_versions[mender-client-3.1.0]" time="62.316" /><testcase classname="test_build.TestBuild" name="test_preferred_versions[mender-client-3.2.1]" time="63.853" /><testcase classname="test_build.TestBuild" name="test_preferred_versions[mender-client-None]" time="40.849" /><testcase classname="test_build.TestBuild" name="test_preferred_versions[mender-client-native-3.2.0]" time="22.906" /><testcase classname="test_build.TestBuild" name="test_preferred_versions[mender-client-native-3.1.0]" time="23.802" /><testcase classname="test_build.TestBuild" name="test_preferred_versions[mender-client-native-3.2.1]" time="22.942" /><testcase classname="test_build.TestBuild" name="test_preferred_versions[mender-client-native-None]" time="21.008" /><testcase classname="test_build.TestBuild" name="test_preferred_versions[mender-artifact-native-3.7.0]" time="56.170" /><testcase classname="test_build.TestBuild" name="test_preferred_versions[mender-artifact-native-3.5.0]" time="55.960" /><testcase classname="test_build.TestBuild" name="test_preferred_versions[mender-artifact-native-3.7.1]" time="55.459" /><testcase classname="test_build.TestBuild" name="test_preferred_versions[mender-artifact-native-3.6.0]" time="55.093" /><testcase classname="test_build.TestBuild" name="test_preferred_versions[mender-artifact-native-3.5.1]" time="54.677" /><testcase classname="test_build.TestBuild" name="test_preferred_versions[mender-artifact-native-3.5.2]" time="54.461" /><testcase classname="test_build.TestBuild" name="test_preferred_versions[mender-artifact-native-3.6.1]" time="54.435" /><testcase classname="test_build.TestBuild" name="test_preferred_versions[mender-artifact-native-None]" time="35.511" /><testcase classname="test_build.TestBuild" name="test_preferred_versions[mender-connect-1.0.1]" time="121.971" /><testcase classname="test_build.TestBuild" name="test_preferred_versions[mender-connect-1.0.2]" time="73.287" /><testcase classname="test_build.TestBuild" name="test_preferred_versions[mender-connect-2.0.1]" time="76.222" /><testcase classname="test_build.TestBuild" name="test_preferred_versions[mender-connect-1.1.0]" time="75.629" /><testcase classname="test_build.TestBuild" name="test_preferred_versions[mender-connect-2.0.0]" time="74.472" /><testcase classname="test_build.TestBuild" name="test_preferred_versions[mender-connect-1.2.1]" time="73.873" /><testcase classname="test_build.TestBuild" name="test_preferred_versions[mender-connect-1.0.0]" time="73.198" /><testcase classname="test_build.TestBuild" name="test_preferred_versions[mender-connect-1.2.0]" time="76.167" /><testcase classname="test_build.TestBuild" name="test_preferred_versions[mender-connect-1.0.3]" time="73.037" /><testcase classname="test_build.TestBuild" name="test_preferred_versions[mender-connect-1.1.1]" time="74.780" /><testcase classname="test_build.TestBuild" name="test_preferred_versions[mender-connect-None]" time="44.114" /><testcase classname="test_build.TestBuild" name="test_preferred_versions[mender-configure-1.0.1]" time="69.348" /><testcase classname="test_build.TestBuild" name="test_preferred_versions[mender-configure-1.0.3]" time="63.176" /><testcase classname="test_build.TestBuild" name="test_preferred_versions[mender-configure-1.0.2]" time="67.774" /><testcase classname="test_build.TestBuild" name="test_preferred_versions[mender-configure-1.0.0]" time="68.399" /><testcase classname="test_build.TestBuild" name="test_preferred_versions[mender-configure-None]" time="45.572" /><testcase classname="test_build.TestBuild" name="test_multiple_device_types_compatible" time="173.016" /><testcase classname="test_build.TestBuild" name="test_various_mtd_combinations[Default-test_case0]" time="0.001"><skipped message="incompatible machine qemux86-64 (required vexpress-qemu-flash)" type="pytest.skip">/builds/Northern.tech/Mender/meta-mender/tests/acceptance/image-tests/tests/utils/fixtures/fixtures.py:550: incompatible machine qemux86-64 (required vexpress-qemu-flash)</skipped></testcase><testcase classname="test_build.TestBuild" name="test_various_mtd_combinations[custom_mtdids-test_case1]" time="0.001"><skipped message="incompatible machine qemux86-64 (required vexpress-qemu-flash)" type="pytest.skip">/builds/Northern.tech/Mender/meta-mender/tests/acceptance/image-tests/tests/utils/fixtures/fixtures.py:550: incompatible machine qemux86-64 (required vexpress-qemu-flash)</skipped></testcase><testcase classname="test_build.TestBuild" name="test_various_mtd_combinations[multiple_mtdids_no_selected_one-test_case2]" time="0.001"><skipped message="incompatible machine qemux86-64 (required vexpress-qemu-flash)" type="pytest.skip">/builds/Northern.tech/Mender/meta-mender/tests/acceptance/image-tests/tests/utils/fixtures/fixtures.py:550: incompatible machine qemux86-64 (required vexpress-qemu-flash)</skipped></testcase><testcase classname="test_build.TestBuild" name="test_various_mtd_combinations[multiple_mtdids_and_selected_one-test_case3]" time="0.001"><skipped message="incompatible machine qemux86-64 (required vexpress-qemu-flash)" type="pytest.skip">/builds/Northern.tech/Mender/meta-mender/tests/acceptance/image-tests/tests/utils/fixtures/fixtures.py:550: incompatible machine qemux86-64 (required vexpress-qemu-flash)</skipped></testcase><testcase classname="test_build.TestBuild" name="test_various_mtd_combinations[multiple_mtdparts-test_case4]" time="0.001"><skipped message="incompatible machine qemux86-64 (required vexpress-qemu-flash)" type="pytest.skip">/builds/Northern.tech/Mender/meta-mender/tests/acceptance/image-tests/tests/utils/fixtures/fixtures.py:550: incompatible machine qemux86-64 (required vexpress-qemu-flash)</skipped></testcase><testcase classname="test_build.TestBuild" name="test_boot_partition_population" time="0.001"><skipped message="no supported filesystem in tar.bz2, ext4, mender, mender.bmap, gptimg, gptimg.bmap, gptimg.bz2, ext4 (supports sdimg, uefiimg)" type="pytest.skip">/builds/Northern.tech/Mender/meta-mender/tests/acceptance/image-tests/tests/utils/fixtures/fixtures.py:595: no supported filesystem in tar.bz2, ext4, mender, mender.bmap, gptimg, gptimg.bmap, gptimg.bz2, ext4 (supports sdimg, uefiimg)</skipped></testcase><testcase classname="test_build.TestBuild" name="test_module_install" time="0.001"><skipped message="no supported filesystem in tar.bz2, ext4, mender, mender.bmap, gptimg, gptimg.bmap, gptimg.bz2, ext4 (supports sdimg, uefiimg)" type="pytest.skip">/builds/Northern.tech/Mender/meta-mender/tests/acceptance/image-tests/tests/utils/fixtures/fixtures.py:595: no supported filesystem in tar.bz2, ext4, mender, mender.bmap, gptimg, gptimg.bmap, gptimg.bz2, ext4 (supports sdimg, uefiimg)</skipped></testcase><testcase classname="test_build.TestBuild" name="test_correct_partition_types" time="0.102" /><testcase classname="test_build.TestBuild" name="test_build_artifact_depends_and_provides[dependsprovides0]" time="60.455" /><testcase classname="test_build.TestBuild" name="test_build_artifact_depends_and_provides[dependsprovides1]" time="61.408" /><testcase classname="test_build.TestBuild" name="test_build_artifact_depends_and_provides[dependsprovides2]" time="60.457" /><testcase classname="test_build.TestBuild" name="test_build_artifact_depends_and_provides[dependsprovides3]" time="63.500" /><testcase classname="test_build.TestBuild" name="test_build_artifact_depends_and_provides[dependsprovides4]" time="58.501" /><testcase classname="test_build.TestBuild" name="test_extra_parts" time="163.487" /><testcase classname="test_build.TestBuild" name="test_build_nodbus" time="89.274" /><testcase classname="test_build.TestBuild" name="test_mender_inventory_network_scripts" time="370.183" /><testcase classname="test_build.TestBuild" name="test_mender_dbus_interface_file" time="174.998" /><testcase classname="test_dataimg.TestDataImg" name="test_dataimg_creation" time="56.814"><failure message="subprocess.CalledProcessError: Command 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw &amp;&amp; bitbake core-image-full-cmdline' returned non-zero exit status 1.">self = &lt;test_dataimg.TestDataImg object at 0x7f71f6a20208&gt;
request = &lt;FixtureRequest for &lt;Function test_dataimg_creation&gt;&gt;
bitbake_variables = {'ABIEXTENSION': '', 'ABIEXTENSION_class-nativesdk': '', 'ALLOW_EMPTY_core-image-minimal-dbg': '1', 'ALLOW_EMPTY_core-image-minimal-dev': '1', ...}
prepared_test_build = {'bitbake_corebase': '/builds/Northern.tech/Mender', 'build_dir': '/builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw'}
bitbake_image = 'core-image-full-cmdline'

    @pytest.mark.min_mender_version("1.0.0")
    def test_dataimg_creation(
        self, request, bitbake_variables, prepared_test_build, bitbake_image
    ):
        """Test that we can build a dataimg successfully."""
    
        build_image(
            prepared_test_build["build_dir"],
            prepared_test_build["bitbake_corebase"],
            bitbake_image,
&gt;           ['IMAGE_FSTYPES = "dataimg"'],
        )

test_dataimg.py:35: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
image-tests/tests/utils/common/common.py:403: in build_image
    _run_bitbake(bitbake_image, init_env_cmd, capture)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

target = 'core-image-full-cmdline'
env_setup_cmd = 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw'
capture = False

    def _run_bitbake(target, env_setup_cmd, capture=False):
        cmd = "%s &amp;&amp; bitbake %s" % (env_setup_cmd, target)
        ps = run_verbose(cmd, capture=subprocess.PIPE)
        output = ""
        try:
            # Cannot use for loop here due to buffering and iterators.
            while True:
                line = ps.stdout.readline().decode()
                if not line:
                    break
    
                if line.find("is not a recognized MENDER_ variable") &gt;= 0:
                    pytest.fail(
                        "Found variable which is not in mender-vars.json: %s" % line.strip()
                    )
    
                if capture:
                    output += line
                else:
                    sys.stdout.write(line)
        finally:
            # Empty any remaining lines.
            try:
                if capture:
                    output += ps.stdout.readlines().decode()
                else:
                    ps.stdout.readlines()
            except:
                pass
            ps.wait()
            if ps.returncode != 0:
                e = subprocess.CalledProcessError(ps.returncode, cmd)
                if capture:
                    e.output = output
&gt;               raise e
E               subprocess.CalledProcessError: Command 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw &amp;&amp; bitbake core-image-full-cmdline' returned non-zero exit status 1.

image-tests/tests/utils/common/common.py:440: CalledProcessError</failure></testcase><testcase classname="test_dbus.TestDBus" name="test_dbus_system_configuration_file" time="41.306"><error message="failed on setup with &quot;subprocess.CalledProcessError: Command 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw &amp;&amp; bitbake core-image-full-cmdline' returned non-zero exit status 1.&quot;">request = &lt;SubRequest 'setup_board' for &lt;Function test_dbus_system_configuration_file&gt;&gt;
qemu_wrapper = '../../meta-mender-qemu/scripts/mender-qemu'
build_image_fn = &lt;function build_image_fn.&lt;locals&gt;.img_builder at 0x7f71f5f60378&gt;
session_connection = &lt;Connection host=localhost user=root port=8822&gt;
board_type = 'qemux86-64-bios-grub-gpt', conversion = False

    @pytest.fixture(scope="session")
    def setup_board(
        request, qemu_wrapper, build_image_fn, session_connection, board_type, conversion
    ):
    
        print("board type: ", board_type)
    
        if "qemu" in board_type:
&gt;           image_dir = build_image_fn()

image-tests/tests/utils/fixtures/fixtures.py:189: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
image-tests/tests/utils/fixtures/fixtures.py:377: in img_builder
    ['EXTRA_IMAGE_FEATURES_append = " ssh-server-openssh"',],
image-tests/tests/utils/common/common.py:403: in build_image
    _run_bitbake(bitbake_image, init_env_cmd, capture)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

target = 'core-image-full-cmdline'
env_setup_cmd = 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw'
capture = False

    def _run_bitbake(target, env_setup_cmd, capture=False):
        cmd = "%s &amp;&amp; bitbake %s" % (env_setup_cmd, target)
        ps = run_verbose(cmd, capture=subprocess.PIPE)
        output = ""
        try:
            # Cannot use for loop here due to buffering and iterators.
            while True:
                line = ps.stdout.readline().decode()
                if not line:
                    break
    
                if line.find("is not a recognized MENDER_ variable") &gt;= 0:
                    pytest.fail(
                        "Found variable which is not in mender-vars.json: %s" % line.strip()
                    )
    
                if capture:
                    output += line
                else:
                    sys.stdout.write(line)
        finally:
            # Empty any remaining lines.
            try:
                if capture:
                    output += ps.stdout.readlines().decode()
                else:
                    ps.stdout.readlines()
            except:
                pass
            ps.wait()
            if ps.returncode != 0:
                e = subprocess.CalledProcessError(ps.returncode, cmd)
                if capture:
                    e.output = output
&gt;               raise e
E               subprocess.CalledProcessError: Command 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw &amp;&amp; bitbake core-image-full-cmdline' returned non-zero exit status 1.

image-tests/tests/utils/common/common.py:440: CalledProcessError</error></testcase><testcase classname="test_dbus.TestDBus" name="test_dbus_non_root_access" time="0.001"><error message="failed on setup with &quot;subprocess.CalledProcessError: Command 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw &amp;&amp; bitbake core-image-full-cmdline' returned non-zero exit status 1.&quot;">request = &lt;SubRequest 'setup_board' for &lt;Function test_dbus_system_configuration_file&gt;&gt;
qemu_wrapper = '../../meta-mender-qemu/scripts/mender-qemu'
build_image_fn = &lt;function build_image_fn.&lt;locals&gt;.img_builder at 0x7f71f5f60378&gt;
session_connection = &lt;Connection host=localhost user=root port=8822&gt;
board_type = 'qemux86-64-bios-grub-gpt', conversion = False

    @pytest.fixture(scope="session")
    def setup_board(
        request, qemu_wrapper, build_image_fn, session_connection, board_type, conversion
    ):
    
        print("board type: ", board_type)
    
        if "qemu" in board_type:
&gt;           image_dir = build_image_fn()

image-tests/tests/utils/fixtures/fixtures.py:189: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
image-tests/tests/utils/fixtures/fixtures.py:377: in img_builder
    ['EXTRA_IMAGE_FEATURES_append = " ssh-server-openssh"',],
image-tests/tests/utils/common/common.py:403: in build_image
    _run_bitbake(bitbake_image, init_env_cmd, capture)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

target = 'core-image-full-cmdline'
env_setup_cmd = 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw'
capture = False

    def _run_bitbake(target, env_setup_cmd, capture=False):
        cmd = "%s &amp;&amp; bitbake %s" % (env_setup_cmd, target)
        ps = run_verbose(cmd, capture=subprocess.PIPE)
        output = ""
        try:
            # Cannot use for loop here due to buffering and iterators.
            while True:
                line = ps.stdout.readline().decode()
                if not line:
                    break
    
                if line.find("is not a recognized MENDER_ variable") &gt;= 0:
                    pytest.fail(
                        "Found variable which is not in mender-vars.json: %s" % line.strip()
                    )
    
                if capture:
                    output += line
                else:
                    sys.stdout.write(line)
        finally:
            # Empty any remaining lines.
            try:
                if capture:
                    output += ps.stdout.readlines().decode()
                else:
                    ps.stdout.readlines()
            except:
                pass
            ps.wait()
            if ps.returncode != 0:
                e = subprocess.CalledProcessError(ps.returncode, cmd)
                if capture:
                    e.output = output
&gt;               raise e
E               subprocess.CalledProcessError: Command 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw &amp;&amp; bitbake core-image-full-cmdline' returned non-zero exit status 1.

image-tests/tests/utils/common/common.py:440: CalledProcessError</error></testcase><testcase classname="test_dbus.TestDBus" name="test_dbus_get_jwt_token" time="0.001"><error message="failed on setup with &quot;subprocess.CalledProcessError: Command 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw &amp;&amp; bitbake core-image-full-cmdline' returned non-zero exit status 1.&quot;">request = &lt;SubRequest 'setup_board' for &lt;Function test_dbus_system_configuration_file&gt;&gt;
qemu_wrapper = '../../meta-mender-qemu/scripts/mender-qemu'
build_image_fn = &lt;function build_image_fn.&lt;locals&gt;.img_builder at 0x7f71f5f60378&gt;
session_connection = &lt;Connection host=localhost user=root port=8822&gt;
board_type = 'qemux86-64-bios-grub-gpt', conversion = False

    @pytest.fixture(scope="session")
    def setup_board(
        request, qemu_wrapper, build_image_fn, session_connection, board_type, conversion
    ):
    
        print("board type: ", board_type)
    
        if "qemu" in board_type:
&gt;           image_dir = build_image_fn()

image-tests/tests/utils/fixtures/fixtures.py:189: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
image-tests/tests/utils/fixtures/fixtures.py:377: in img_builder
    ['EXTRA_IMAGE_FEATURES_append = " ssh-server-openssh"',],
image-tests/tests/utils/common/common.py:403: in build_image
    _run_bitbake(bitbake_image, init_env_cmd, capture)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

target = 'core-image-full-cmdline'
env_setup_cmd = 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw'
capture = False

    def _run_bitbake(target, env_setup_cmd, capture=False):
        cmd = "%s &amp;&amp; bitbake %s" % (env_setup_cmd, target)
        ps = run_verbose(cmd, capture=subprocess.PIPE)
        output = ""
        try:
            # Cannot use for loop here due to buffering and iterators.
            while True:
                line = ps.stdout.readline().decode()
                if not line:
                    break
    
                if line.find("is not a recognized MENDER_ variable") &gt;= 0:
                    pytest.fail(
                        "Found variable which is not in mender-vars.json: %s" % line.strip()
                    )
    
                if capture:
                    output += line
                else:
                    sys.stdout.write(line)
        finally:
            # Empty any remaining lines.
            try:
                if capture:
                    output += ps.stdout.readlines().decode()
                else:
                    ps.stdout.readlines()
            except:
                pass
            ps.wait()
            if ps.returncode != 0:
                e = subprocess.CalledProcessError(ps.returncode, cmd)
                if capture:
                    e.output = output
&gt;               raise e
E               subprocess.CalledProcessError: Command 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw &amp;&amp; bitbake core-image-full-cmdline' returned non-zero exit status 1.

image-tests/tests/utils/common/common.py:440: CalledProcessError</error></testcase><testcase classname="test_dbus.TestDBus" name="test_dbus_fetch_jwt_token" time="0.001"><error message="failed on setup with &quot;subprocess.CalledProcessError: Command 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw &amp;&amp; bitbake core-image-full-cmdline' returned non-zero exit status 1.&quot;">request = &lt;SubRequest 'setup_board' for &lt;Function test_dbus_system_configuration_file&gt;&gt;
qemu_wrapper = '../../meta-mender-qemu/scripts/mender-qemu'
build_image_fn = &lt;function build_image_fn.&lt;locals&gt;.img_builder at 0x7f71f5f60378&gt;
session_connection = &lt;Connection host=localhost user=root port=8822&gt;
board_type = 'qemux86-64-bios-grub-gpt', conversion = False

    @pytest.fixture(scope="session")
    def setup_board(
        request, qemu_wrapper, build_image_fn, session_connection, board_type, conversion
    ):
    
        print("board type: ", board_type)
    
        if "qemu" in board_type:
&gt;           image_dir = build_image_fn()

image-tests/tests/utils/fixtures/fixtures.py:189: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
image-tests/tests/utils/fixtures/fixtures.py:377: in img_builder
    ['EXTRA_IMAGE_FEATURES_append = " ssh-server-openssh"',],
image-tests/tests/utils/common/common.py:403: in build_image
    _run_bitbake(bitbake_image, init_env_cmd, capture)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

target = 'core-image-full-cmdline'
env_setup_cmd = 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw'
capture = False

    def _run_bitbake(target, env_setup_cmd, capture=False):
        cmd = "%s &amp;&amp; bitbake %s" % (env_setup_cmd, target)
        ps = run_verbose(cmd, capture=subprocess.PIPE)
        output = ""
        try:
            # Cannot use for loop here due to buffering and iterators.
            while True:
                line = ps.stdout.readline().decode()
                if not line:
                    break
    
                if line.find("is not a recognized MENDER_ variable") &gt;= 0:
                    pytest.fail(
                        "Found variable which is not in mender-vars.json: %s" % line.strip()
                    )
    
                if capture:
                    output += line
                else:
                    sys.stdout.write(line)
        finally:
            # Empty any remaining lines.
            try:
                if capture:
                    output += ps.stdout.readlines().decode()
                else:
                    ps.stdout.readlines()
            except:
                pass
            ps.wait()
            if ps.returncode != 0:
                e = subprocess.CalledProcessError(ps.returncode, cmd)
                if capture:
                    e.output = output
&gt;               raise e
E               subprocess.CalledProcessError: Command 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw &amp;&amp; bitbake core-image-full-cmdline' returned non-zero exit status 1.

image-tests/tests/utils/common/common.py:440: CalledProcessError</error></testcase><testcase classname="test_inventory.TestInventory" name="test_rootfs_type" time="0.001"><error message="failed on setup with &quot;subprocess.CalledProcessError: Command 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw &amp;&amp; bitbake core-image-full-cmdline' returned non-zero exit status 1.&quot;">request = &lt;SubRequest 'setup_board' for &lt;Function test_dbus_system_configuration_file&gt;&gt;
qemu_wrapper = '../../meta-mender-qemu/scripts/mender-qemu'
build_image_fn = &lt;function build_image_fn.&lt;locals&gt;.img_builder at 0x7f71f5f60378&gt;
session_connection = &lt;Connection host=localhost user=root port=8822&gt;
board_type = 'qemux86-64-bios-grub-gpt', conversion = False

    @pytest.fixture(scope="session")
    def setup_board(
        request, qemu_wrapper, build_image_fn, session_connection, board_type, conversion
    ):
    
        print("board type: ", board_type)
    
        if "qemu" in board_type:
&gt;           image_dir = build_image_fn()

image-tests/tests/utils/fixtures/fixtures.py:189: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
image-tests/tests/utils/fixtures/fixtures.py:377: in img_builder
    ['EXTRA_IMAGE_FEATURES_append = " ssh-server-openssh"',],
image-tests/tests/utils/common/common.py:403: in build_image
    _run_bitbake(bitbake_image, init_env_cmd, capture)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

target = 'core-image-full-cmdline'
env_setup_cmd = 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw'
capture = False

    def _run_bitbake(target, env_setup_cmd, capture=False):
        cmd = "%s &amp;&amp; bitbake %s" % (env_setup_cmd, target)
        ps = run_verbose(cmd, capture=subprocess.PIPE)
        output = ""
        try:
            # Cannot use for loop here due to buffering and iterators.
            while True:
                line = ps.stdout.readline().decode()
                if not line:
                    break
    
                if line.find("is not a recognized MENDER_ variable") &gt;= 0:
                    pytest.fail(
                        "Found variable which is not in mender-vars.json: %s" % line.strip()
                    )
    
                if capture:
                    output += line
                else:
                    sys.stdout.write(line)
        finally:
            # Empty any remaining lines.
            try:
                if capture:
                    output += ps.stdout.readlines().decode()
                else:
                    ps.stdout.readlines()
            except:
                pass
            ps.wait()
            if ps.returncode != 0:
                e = subprocess.CalledProcessError(ps.returncode, cmd)
                if capture:
                    e.output = output
&gt;               raise e
E               subprocess.CalledProcessError: Command 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw &amp;&amp; bitbake core-image-full-cmdline' returned non-zero exit status 1.

image-tests/tests/utils/common/common.py:440: CalledProcessError</error></testcase><testcase classname="test_inventory.TestInventory" name="test_bootloader_integration" time="0.001"><error message="failed on setup with &quot;subprocess.CalledProcessError: Command 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw &amp;&amp; bitbake core-image-full-cmdline' returned non-zero exit status 1.&quot;">request = &lt;SubRequest 'setup_board' for &lt;Function test_dbus_system_configuration_file&gt;&gt;
qemu_wrapper = '../../meta-mender-qemu/scripts/mender-qemu'
build_image_fn = &lt;function build_image_fn.&lt;locals&gt;.img_builder at 0x7f71f5f60378&gt;
session_connection = &lt;Connection host=localhost user=root port=8822&gt;
board_type = 'qemux86-64-bios-grub-gpt', conversion = False

    @pytest.fixture(scope="session")
    def setup_board(
        request, qemu_wrapper, build_image_fn, session_connection, board_type, conversion
    ):
    
        print("board type: ", board_type)
    
        if "qemu" in board_type:
&gt;           image_dir = build_image_fn()

image-tests/tests/utils/fixtures/fixtures.py:189: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
image-tests/tests/utils/fixtures/fixtures.py:377: in img_builder
    ['EXTRA_IMAGE_FEATURES_append = " ssh-server-openssh"',],
image-tests/tests/utils/common/common.py:403: in build_image
    _run_bitbake(bitbake_image, init_env_cmd, capture)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

target = 'core-image-full-cmdline'
env_setup_cmd = 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw'
capture = False

    def _run_bitbake(target, env_setup_cmd, capture=False):
        cmd = "%s &amp;&amp; bitbake %s" % (env_setup_cmd, target)
        ps = run_verbose(cmd, capture=subprocess.PIPE)
        output = ""
        try:
            # Cannot use for loop here due to buffering and iterators.
            while True:
                line = ps.stdout.readline().decode()
                if not line:
                    break
    
                if line.find("is not a recognized MENDER_ variable") &gt;= 0:
                    pytest.fail(
                        "Found variable which is not in mender-vars.json: %s" % line.strip()
                    )
    
                if capture:
                    output += line
                else:
                    sys.stdout.write(line)
        finally:
            # Empty any remaining lines.
            try:
                if capture:
                    output += ps.stdout.readlines().decode()
                else:
                    ps.stdout.readlines()
            except:
                pass
            ps.wait()
            if ps.returncode != 0:
                e = subprocess.CalledProcessError(ps.returncode, cmd)
                if capture:
                    e.output = output
&gt;               raise e
E               subprocess.CalledProcessError: Command 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw &amp;&amp; bitbake core-image-full-cmdline' returned non-zero exit status 1.

image-tests/tests/utils/common/common.py:440: CalledProcessError</error></testcase><testcase classname="test_inventory.TestInventory" name="test_inventory_os" time="0.001"><error message="failed on setup with &quot;subprocess.CalledProcessError: Command 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw &amp;&amp; bitbake core-image-full-cmdline' returned non-zero exit status 1.&quot;">request = &lt;SubRequest 'setup_board' for &lt;Function test_dbus_system_configuration_file&gt;&gt;
qemu_wrapper = '../../meta-mender-qemu/scripts/mender-qemu'
build_image_fn = &lt;function build_image_fn.&lt;locals&gt;.img_builder at 0x7f71f5f60378&gt;
session_connection = &lt;Connection host=localhost user=root port=8822&gt;
board_type = 'qemux86-64-bios-grub-gpt', conversion = False

    @pytest.fixture(scope="session")
    def setup_board(
        request, qemu_wrapper, build_image_fn, session_connection, board_type, conversion
    ):
    
        print("board type: ", board_type)
    
        if "qemu" in board_type:
&gt;           image_dir = build_image_fn()

image-tests/tests/utils/fixtures/fixtures.py:189: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
image-tests/tests/utils/fixtures/fixtures.py:377: in img_builder
    ['EXTRA_IMAGE_FEATURES_append = " ssh-server-openssh"',],
image-tests/tests/utils/common/common.py:403: in build_image
    _run_bitbake(bitbake_image, init_env_cmd, capture)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

target = 'core-image-full-cmdline'
env_setup_cmd = 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw'
capture = False

    def _run_bitbake(target, env_setup_cmd, capture=False):
        cmd = "%s &amp;&amp; bitbake %s" % (env_setup_cmd, target)
        ps = run_verbose(cmd, capture=subprocess.PIPE)
        output = ""
        try:
            # Cannot use for loop here due to buffering and iterators.
            while True:
                line = ps.stdout.readline().decode()
                if not line:
                    break
    
                if line.find("is not a recognized MENDER_ variable") &gt;= 0:
                    pytest.fail(
                        "Found variable which is not in mender-vars.json: %s" % line.strip()
                    )
    
                if capture:
                    output += line
                else:
                    sys.stdout.write(line)
        finally:
            # Empty any remaining lines.
            try:
                if capture:
                    output += ps.stdout.readlines().decode()
                else:
                    ps.stdout.readlines()
            except:
                pass
            ps.wait()
            if ps.returncode != 0:
                e = subprocess.CalledProcessError(ps.returncode, cmd)
                if capture:
                    e.output = output
&gt;               raise e
E               subprocess.CalledProcessError: Command 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw &amp;&amp; bitbake core-image-full-cmdline' returned non-zero exit status 1.

image-tests/tests/utils/common/common.py:440: CalledProcessError</error></testcase><testcase classname="test_mender-artifact.TestMenderArtifact" name="test_order[2]" time="41.660"><error message="failed on setup with &quot;subprocess.CalledProcessError: Command 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw &amp;&amp; bitbake core-image-full-cmdline' returned non-zero exit status 1.&quot;">request = &lt;SubRequest 'versioned_mender_image' for &lt;Function test_order[2]&gt;&gt;
prepared_test_build = {'bitbake_corebase': '/builds/Northern.tech/Mender', 'build_dir': '/builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw'}
latest_mender_image = '/builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/tmp/deploy/images/qemux86-64/core-image-full-cmdline-qemux86-64-bios-grub-gpt.mender'
bitbake_variables = {'ABIEXTENSION': '', 'ABIEXTENSION_class-nativesdk': '', 'ALLOW_EMPTY_core-image-minimal-dbg': '1', 'ALLOW_EMPTY_core-image-minimal-dev': '1', ...}
bitbake_image = 'core-image-full-cmdline'

    @pytest.fixture(scope="function", params=[2, 3])
    def versioned_mender_image(
        request, prepared_test_build, latest_mender_image, bitbake_variables, bitbake_image
    ):
        """Gets the correct version of the artifact, whether it's the one we
        build by default, or one we have to produce ourselves.
        Returns a tuple of version and built image."""
    
        global LAST_BUILD_VERSION
    
        version = request.param
    
        if version == 1:
            pytest.fail()
    
        if (
            version &gt;= 2
            and not version_is_minimum(bitbake_variables, "mender-artifact", "2.0.0")
        ) or (
            version &gt;= 3
            and not version_is_minimum(bitbake_variables, "mender-artifact", "3.0.0")
        ):
            pytest.skip("Requires version %d of mender-artifact format." % version)
    
        if version_is_minimum(bitbake_variables, "mender-artifact", "3.0.0"):
            default_version = 3
        elif version_is_minimum(bitbake_variables, "mender-artifact", "2.0.0"):
            default_version = 2
        else:
            default_version = 2
    
        if LAST_BUILD_VERSION != version:
            # Run a separate build for this artifact. This doesn't conflict with the
            # above version because the non-default version ends up in a different
            # directory.
            if version != default_version:
                build_image(
                    prepared_test_build["build_dir"],
                    prepared_test_build["bitbake_corebase"],
                    bitbake_image,
&gt;                   ['MENDER_ARTIFACT_EXTRA_ARGS = "-v %d"' % version],
                )

test_mender-artifact.py:71: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
image-tests/tests/utils/common/common.py:403: in build_image
    _run_bitbake(bitbake_image, init_env_cmd, capture)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

target = 'core-image-full-cmdline'
env_setup_cmd = 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw'
capture = False

    def _run_bitbake(target, env_setup_cmd, capture=False):
        cmd = "%s &amp;&amp; bitbake %s" % (env_setup_cmd, target)
        ps = run_verbose(cmd, capture=subprocess.PIPE)
        output = ""
        try:
            # Cannot use for loop here due to buffering and iterators.
            while True:
                line = ps.stdout.readline().decode()
                if not line:
                    break
    
                if line.find("is not a recognized MENDER_ variable") &gt;= 0:
                    pytest.fail(
                        "Found variable which is not in mender-vars.json: %s" % line.strip()
                    )
    
                if capture:
                    output += line
                else:
                    sys.stdout.write(line)
        finally:
            # Empty any remaining lines.
            try:
                if capture:
                    output += ps.stdout.readlines().decode()
                else:
                    ps.stdout.readlines()
            except:
                pass
            ps.wait()
            if ps.returncode != 0:
                e = subprocess.CalledProcessError(ps.returncode, cmd)
                if capture:
                    e.output = output
&gt;               raise e
E               subprocess.CalledProcessError: Command 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw &amp;&amp; bitbake core-image-full-cmdline' returned non-zero exit status 1.

image-tests/tests/utils/common/common.py:440: CalledProcessError</error></testcase><testcase classname="test_mender-artifact.TestMenderArtifact" name="test_order[3]" time="22.342"><error message="failed on setup with &quot;subprocess.CalledProcessError: Command 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw &amp;&amp; bitbake core-image-full-cmdline' returned non-zero exit status 1.&quot;">request = &lt;SubRequest 'versioned_mender_image' for &lt;Function test_order[3]&gt;&gt;
prepared_test_build = {'bitbake_corebase': '/builds/Northern.tech/Mender', 'build_dir': '/builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw'}
latest_mender_image = '/builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/tmp/deploy/images/qemux86-64/core-image-full-cmdline-qemux86-64-bios-grub-gpt.mender'
bitbake_variables = {'ABIEXTENSION': '', 'ABIEXTENSION_class-nativesdk': '', 'ALLOW_EMPTY_core-image-minimal-dbg': '1', 'ALLOW_EMPTY_core-image-minimal-dev': '1', ...}
bitbake_image = 'core-image-full-cmdline'

    @pytest.fixture(scope="function", params=[2, 3])
    def versioned_mender_image(
        request, prepared_test_build, latest_mender_image, bitbake_variables, bitbake_image
    ):
        """Gets the correct version of the artifact, whether it's the one we
        build by default, or one we have to produce ourselves.
        Returns a tuple of version and built image."""
    
        global LAST_BUILD_VERSION
    
        version = request.param
    
        if version == 1:
            pytest.fail()
    
        if (
            version &gt;= 2
            and not version_is_minimum(bitbake_variables, "mender-artifact", "2.0.0")
        ) or (
            version &gt;= 3
            and not version_is_minimum(bitbake_variables, "mender-artifact", "3.0.0")
        ):
            pytest.skip("Requires version %d of mender-artifact format." % version)
    
        if version_is_minimum(bitbake_variables, "mender-artifact", "3.0.0"):
            default_version = 3
        elif version_is_minimum(bitbake_variables, "mender-artifact", "2.0.0"):
            default_version = 2
        else:
            default_version = 2
    
        if LAST_BUILD_VERSION != version:
            # Run a separate build for this artifact. This doesn't conflict with the
            # above version because the non-default version ends up in a different
            # directory.
            if version != default_version:
                build_image(
                    prepared_test_build["build_dir"],
                    prepared_test_build["bitbake_corebase"],
                    bitbake_image,
                    ['MENDER_ARTIFACT_EXTRA_ARGS = "-v %d"' % version],
                )
            else:
                build_image(
                    prepared_test_build["build_dir"],
                    prepared_test_build["bitbake_corebase"],
&gt;                   bitbake_image,
                )

test_mender-artifact.py:77: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
image-tests/tests/utils/common/common.py:403: in build_image
    _run_bitbake(bitbake_image, init_env_cmd, capture)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

target = 'core-image-full-cmdline'
env_setup_cmd = 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw'
capture = False

    def _run_bitbake(target, env_setup_cmd, capture=False):
        cmd = "%s &amp;&amp; bitbake %s" % (env_setup_cmd, target)
        ps = run_verbose(cmd, capture=subprocess.PIPE)
        output = ""
        try:
            # Cannot use for loop here due to buffering and iterators.
            while True:
                line = ps.stdout.readline().decode()
                if not line:
                    break
    
                if line.find("is not a recognized MENDER_ variable") &gt;= 0:
                    pytest.fail(
                        "Found variable which is not in mender-vars.json: %s" % line.strip()
                    )
    
                if capture:
                    output += line
                else:
                    sys.stdout.write(line)
        finally:
            # Empty any remaining lines.
            try:
                if capture:
                    output += ps.stdout.readlines().decode()
                else:
                    ps.stdout.readlines()
            except:
                pass
            ps.wait()
            if ps.returncode != 0:
                e = subprocess.CalledProcessError(ps.returncode, cmd)
                if capture:
                    e.output = output
&gt;               raise e
E               subprocess.CalledProcessError: Command 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw &amp;&amp; bitbake core-image-full-cmdline' returned non-zero exit status 1.

image-tests/tests/utils/common/common.py:440: CalledProcessError</error></testcase><testcase classname="test_mender-artifact.TestMenderArtifact" name="test_files_list_integrity[2]" time="23.867"><error message="failed on setup with &quot;subprocess.CalledProcessError: Command 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw &amp;&amp; bitbake core-image-full-cmdline' returned non-zero exit status 1.&quot;">request = &lt;SubRequest 'versioned_mender_image' for &lt;Function test_files_list_integrity[2]&gt;&gt;
prepared_test_build = {'bitbake_corebase': '/builds/Northern.tech/Mender', 'build_dir': '/builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw'}
latest_mender_image = '/builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/tmp/deploy/images/qemux86-64/core-image-full-cmdline-qemux86-64-bios-grub-gpt.mender'
bitbake_variables = {'ABIEXTENSION': '', 'ABIEXTENSION_class-nativesdk': '', 'ALLOW_EMPTY_core-image-minimal-dbg': '1', 'ALLOW_EMPTY_core-image-minimal-dev': '1', ...}
bitbake_image = 'core-image-full-cmdline'

    @pytest.fixture(scope="function", params=[2, 3])
    def versioned_mender_image(
        request, prepared_test_build, latest_mender_image, bitbake_variables, bitbake_image
    ):
        """Gets the correct version of the artifact, whether it's the one we
        build by default, or one we have to produce ourselves.
        Returns a tuple of version and built image."""
    
        global LAST_BUILD_VERSION
    
        version = request.param
    
        if version == 1:
            pytest.fail()
    
        if (
            version &gt;= 2
            and not version_is_minimum(bitbake_variables, "mender-artifact", "2.0.0")
        ) or (
            version &gt;= 3
            and not version_is_minimum(bitbake_variables, "mender-artifact", "3.0.0")
        ):
            pytest.skip("Requires version %d of mender-artifact format." % version)
    
        if version_is_minimum(bitbake_variables, "mender-artifact", "3.0.0"):
            default_version = 3
        elif version_is_minimum(bitbake_variables, "mender-artifact", "2.0.0"):
            default_version = 2
        else:
            default_version = 2
    
        if LAST_BUILD_VERSION != version:
            # Run a separate build for this artifact. This doesn't conflict with the
            # above version because the non-default version ends up in a different
            # directory.
            if version != default_version:
                build_image(
                    prepared_test_build["build_dir"],
                    prepared_test_build["bitbake_corebase"],
                    bitbake_image,
&gt;                   ['MENDER_ARTIFACT_EXTRA_ARGS = "-v %d"' % version],
                )

test_mender-artifact.py:71: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
image-tests/tests/utils/common/common.py:403: in build_image
    _run_bitbake(bitbake_image, init_env_cmd, capture)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

target = 'core-image-full-cmdline'
env_setup_cmd = 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw'
capture = False

    def _run_bitbake(target, env_setup_cmd, capture=False):
        cmd = "%s &amp;&amp; bitbake %s" % (env_setup_cmd, target)
        ps = run_verbose(cmd, capture=subprocess.PIPE)
        output = ""
        try:
            # Cannot use for loop here due to buffering and iterators.
            while True:
                line = ps.stdout.readline().decode()
                if not line:
                    break
    
                if line.find("is not a recognized MENDER_ variable") &gt;= 0:
                    pytest.fail(
                        "Found variable which is not in mender-vars.json: %s" % line.strip()
                    )
    
                if capture:
                    output += line
                else:
                    sys.stdout.write(line)
        finally:
            # Empty any remaining lines.
            try:
                if capture:
                    output += ps.stdout.readlines().decode()
                else:
                    ps.stdout.readlines()
            except:
                pass
            ps.wait()
            if ps.returncode != 0:
                e = subprocess.CalledProcessError(ps.returncode, cmd)
                if capture:
                    e.output = output
&gt;               raise e
E               subprocess.CalledProcessError: Command 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw &amp;&amp; bitbake core-image-full-cmdline' returned non-zero exit status 1.

image-tests/tests/utils/common/common.py:440: CalledProcessError</error></testcase><testcase classname="test_mender-artifact.TestMenderArtifact" name="test_files_list_integrity[3]" time="21.984"><error message="failed on setup with &quot;subprocess.CalledProcessError: Command 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw &amp;&amp; bitbake core-image-full-cmdline' returned non-zero exit status 1.&quot;">request = &lt;SubRequest 'versioned_mender_image' for &lt;Function test_files_list_integrity[3]&gt;&gt;
prepared_test_build = {'bitbake_corebase': '/builds/Northern.tech/Mender', 'build_dir': '/builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw'}
latest_mender_image = '/builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/tmp/deploy/images/qemux86-64/core-image-full-cmdline-qemux86-64-bios-grub-gpt.mender'
bitbake_variables = {'ABIEXTENSION': '', 'ABIEXTENSION_class-nativesdk': '', 'ALLOW_EMPTY_core-image-minimal-dbg': '1', 'ALLOW_EMPTY_core-image-minimal-dev': '1', ...}
bitbake_image = 'core-image-full-cmdline'

    @pytest.fixture(scope="function", params=[2, 3])
    def versioned_mender_image(
        request, prepared_test_build, latest_mender_image, bitbake_variables, bitbake_image
    ):
        """Gets the correct version of the artifact, whether it's the one we
        build by default, or one we have to produce ourselves.
        Returns a tuple of version and built image."""
    
        global LAST_BUILD_VERSION
    
        version = request.param
    
        if version == 1:
            pytest.fail()
    
        if (
            version &gt;= 2
            and not version_is_minimum(bitbake_variables, "mender-artifact", "2.0.0")
        ) or (
            version &gt;= 3
            and not version_is_minimum(bitbake_variables, "mender-artifact", "3.0.0")
        ):
            pytest.skip("Requires version %d of mender-artifact format." % version)
    
        if version_is_minimum(bitbake_variables, "mender-artifact", "3.0.0"):
            default_version = 3
        elif version_is_minimum(bitbake_variables, "mender-artifact", "2.0.0"):
            default_version = 2
        else:
            default_version = 2
    
        if LAST_BUILD_VERSION != version:
            # Run a separate build for this artifact. This doesn't conflict with the
            # above version because the non-default version ends up in a different
            # directory.
            if version != default_version:
                build_image(
                    prepared_test_build["build_dir"],
                    prepared_test_build["bitbake_corebase"],
                    bitbake_image,
                    ['MENDER_ARTIFACT_EXTRA_ARGS = "-v %d"' % version],
                )
            else:
                build_image(
                    prepared_test_build["build_dir"],
                    prepared_test_build["bitbake_corebase"],
&gt;                   bitbake_image,
                )

test_mender-artifact.py:77: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
image-tests/tests/utils/common/common.py:403: in build_image
    _run_bitbake(bitbake_image, init_env_cmd, capture)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

target = 'core-image-full-cmdline'
env_setup_cmd = 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw'
capture = False

    def _run_bitbake(target, env_setup_cmd, capture=False):
        cmd = "%s &amp;&amp; bitbake %s" % (env_setup_cmd, target)
        ps = run_verbose(cmd, capture=subprocess.PIPE)
        output = ""
        try:
            # Cannot use for loop here due to buffering and iterators.
            while True:
                line = ps.stdout.readline().decode()
                if not line:
                    break
    
                if line.find("is not a recognized MENDER_ variable") &gt;= 0:
                    pytest.fail(
                        "Found variable which is not in mender-vars.json: %s" % line.strip()
                    )
    
                if capture:
                    output += line
                else:
                    sys.stdout.write(line)
        finally:
            # Empty any remaining lines.
            try:
                if capture:
                    output += ps.stdout.readlines().decode()
                else:
                    ps.stdout.readlines()
            except:
                pass
            ps.wait()
            if ps.returncode != 0:
                e = subprocess.CalledProcessError(ps.returncode, cmd)
                if capture:
                    e.output = output
&gt;               raise e
E               subprocess.CalledProcessError: Command 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw &amp;&amp; bitbake core-image-full-cmdline' returned non-zero exit status 1.

image-tests/tests/utils/common/common.py:440: CalledProcessError</error></testcase><testcase classname="test_mender-artifact.TestMenderArtifact" name="test_files_checksum_integrity[2]" time="21.891"><error message="failed on setup with &quot;subprocess.CalledProcessError: Command 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw &amp;&amp; bitbake core-image-full-cmdline' returned non-zero exit status 1.&quot;">request = &lt;SubRequest 'versioned_mender_image' for &lt;Function test_files_checksum_integrity[2]&gt;&gt;
prepared_test_build = {'bitbake_corebase': '/builds/Northern.tech/Mender', 'build_dir': '/builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw'}
latest_mender_image = '/builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/tmp/deploy/images/qemux86-64/core-image-full-cmdline-qemux86-64-bios-grub-gpt.mender'
bitbake_variables = {'ABIEXTENSION': '', 'ABIEXTENSION_class-nativesdk': '', 'ALLOW_EMPTY_core-image-minimal-dbg': '1', 'ALLOW_EMPTY_core-image-minimal-dev': '1', ...}
bitbake_image = 'core-image-full-cmdline'

    @pytest.fixture(scope="function", params=[2, 3])
    def versioned_mender_image(
        request, prepared_test_build, latest_mender_image, bitbake_variables, bitbake_image
    ):
        """Gets the correct version of the artifact, whether it's the one we
        build by default, or one we have to produce ourselves.
        Returns a tuple of version and built image."""
    
        global LAST_BUILD_VERSION
    
        version = request.param
    
        if version == 1:
            pytest.fail()
    
        if (
            version &gt;= 2
            and not version_is_minimum(bitbake_variables, "mender-artifact", "2.0.0")
        ) or (
            version &gt;= 3
            and not version_is_minimum(bitbake_variables, "mender-artifact", "3.0.0")
        ):
            pytest.skip("Requires version %d of mender-artifact format." % version)
    
        if version_is_minimum(bitbake_variables, "mender-artifact", "3.0.0"):
            default_version = 3
        elif version_is_minimum(bitbake_variables, "mender-artifact", "2.0.0"):
            default_version = 2
        else:
            default_version = 2
    
        if LAST_BUILD_VERSION != version:
            # Run a separate build for this artifact. This doesn't conflict with the
            # above version because the non-default version ends up in a different
            # directory.
            if version != default_version:
                build_image(
                    prepared_test_build["build_dir"],
                    prepared_test_build["bitbake_corebase"],
                    bitbake_image,
&gt;                   ['MENDER_ARTIFACT_EXTRA_ARGS = "-v %d"' % version],
                )

test_mender-artifact.py:71: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
image-tests/tests/utils/common/common.py:403: in build_image
    _run_bitbake(bitbake_image, init_env_cmd, capture)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

target = 'core-image-full-cmdline'
env_setup_cmd = 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw'
capture = False

    def _run_bitbake(target, env_setup_cmd, capture=False):
        cmd = "%s &amp;&amp; bitbake %s" % (env_setup_cmd, target)
        ps = run_verbose(cmd, capture=subprocess.PIPE)
        output = ""
        try:
            # Cannot use for loop here due to buffering and iterators.
            while True:
                line = ps.stdout.readline().decode()
                if not line:
                    break
    
                if line.find("is not a recognized MENDER_ variable") &gt;= 0:
                    pytest.fail(
                        "Found variable which is not in mender-vars.json: %s" % line.strip()
                    )
    
                if capture:
                    output += line
                else:
                    sys.stdout.write(line)
        finally:
            # Empty any remaining lines.
            try:
                if capture:
                    output += ps.stdout.readlines().decode()
                else:
                    ps.stdout.readlines()
            except:
                pass
            ps.wait()
            if ps.returncode != 0:
                e = subprocess.CalledProcessError(ps.returncode, cmd)
                if capture:
                    e.output = output
&gt;               raise e
E               subprocess.CalledProcessError: Command 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw &amp;&amp; bitbake core-image-full-cmdline' returned non-zero exit status 1.

image-tests/tests/utils/common/common.py:440: CalledProcessError</error></testcase><testcase classname="test_mender-artifact.TestMenderArtifact" name="test_files_checksum_integrity[3]" time="21.696"><error message="failed on setup with &quot;subprocess.CalledProcessError: Command 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw &amp;&amp; bitbake core-image-full-cmdline' returned non-zero exit status 1.&quot;">request = &lt;SubRequest 'versioned_mender_image' for &lt;Function test_files_checksum_integrity[3]&gt;&gt;
prepared_test_build = {'bitbake_corebase': '/builds/Northern.tech/Mender', 'build_dir': '/builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw'}
latest_mender_image = '/builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/tmp/deploy/images/qemux86-64/core-image-full-cmdline-qemux86-64-bios-grub-gpt.mender'
bitbake_variables = {'ABIEXTENSION': '', 'ABIEXTENSION_class-nativesdk': '', 'ALLOW_EMPTY_core-image-minimal-dbg': '1', 'ALLOW_EMPTY_core-image-minimal-dev': '1', ...}
bitbake_image = 'core-image-full-cmdline'

    @pytest.fixture(scope="function", params=[2, 3])
    def versioned_mender_image(
        request, prepared_test_build, latest_mender_image, bitbake_variables, bitbake_image
    ):
        """Gets the correct version of the artifact, whether it's the one we
        build by default, or one we have to produce ourselves.
        Returns a tuple of version and built image."""
    
        global LAST_BUILD_VERSION
    
        version = request.param
    
        if version == 1:
            pytest.fail()
    
        if (
            version &gt;= 2
            and not version_is_minimum(bitbake_variables, "mender-artifact", "2.0.0")
        ) or (
            version &gt;= 3
            and not version_is_minimum(bitbake_variables, "mender-artifact", "3.0.0")
        ):
            pytest.skip("Requires version %d of mender-artifact format." % version)
    
        if version_is_minimum(bitbake_variables, "mender-artifact", "3.0.0"):
            default_version = 3
        elif version_is_minimum(bitbake_variables, "mender-artifact", "2.0.0"):
            default_version = 2
        else:
            default_version = 2
    
        if LAST_BUILD_VERSION != version:
            # Run a separate build for this artifact. This doesn't conflict with the
            # above version because the non-default version ends up in a different
            # directory.
            if version != default_version:
                build_image(
                    prepared_test_build["build_dir"],
                    prepared_test_build["bitbake_corebase"],
                    bitbake_image,
                    ['MENDER_ARTIFACT_EXTRA_ARGS = "-v %d"' % version],
                )
            else:
                build_image(
                    prepared_test_build["build_dir"],
                    prepared_test_build["bitbake_corebase"],
&gt;                   bitbake_image,
                )

test_mender-artifact.py:77: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
image-tests/tests/utils/common/common.py:403: in build_image
    _run_bitbake(bitbake_image, init_env_cmd, capture)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

target = 'core-image-full-cmdline'
env_setup_cmd = 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw'
capture = False

    def _run_bitbake(target, env_setup_cmd, capture=False):
        cmd = "%s &amp;&amp; bitbake %s" % (env_setup_cmd, target)
        ps = run_verbose(cmd, capture=subprocess.PIPE)
        output = ""
        try:
            # Cannot use for loop here due to buffering and iterators.
            while True:
                line = ps.stdout.readline().decode()
                if not line:
                    break
    
                if line.find("is not a recognized MENDER_ variable") &gt;= 0:
                    pytest.fail(
                        "Found variable which is not in mender-vars.json: %s" % line.strip()
                    )
    
                if capture:
                    output += line
                else:
                    sys.stdout.write(line)
        finally:
            # Empty any remaining lines.
            try:
                if capture:
                    output += ps.stdout.readlines().decode()
                else:
                    ps.stdout.readlines()
            except:
                pass
            ps.wait()
            if ps.returncode != 0:
                e = subprocess.CalledProcessError(ps.returncode, cmd)
                if capture:
                    e.output = output
&gt;               raise e
E               subprocess.CalledProcessError: Command 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw &amp;&amp; bitbake core-image-full-cmdline' returned non-zero exit status 1.

image-tests/tests/utils/common/common.py:440: CalledProcessError</error></testcase><testcase classname="test_mender-artifact.TestMenderArtifact" name="test_artifacts_validation[2]" time="24.863"><error message="failed on setup with &quot;subprocess.CalledProcessError: Command 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw &amp;&amp; bitbake core-image-full-cmdline' returned non-zero exit status 1.&quot;">request = &lt;SubRequest 'versioned_mender_image' for &lt;Function test_artifacts_validation[2]&gt;&gt;
prepared_test_build = {'bitbake_corebase': '/builds/Northern.tech/Mender', 'build_dir': '/builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw'}
latest_mender_image = '/builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/tmp/deploy/images/qemux86-64/core-image-full-cmdline-qemux86-64-bios-grub-gpt.mender'
bitbake_variables = {'ABIEXTENSION': '', 'ABIEXTENSION_class-nativesdk': '', 'ALLOW_EMPTY_core-image-minimal-dbg': '1', 'ALLOW_EMPTY_core-image-minimal-dev': '1', ...}
bitbake_image = 'core-image-full-cmdline'

    @pytest.fixture(scope="function", params=[2, 3])
    def versioned_mender_image(
        request, prepared_test_build, latest_mender_image, bitbake_variables, bitbake_image
    ):
        """Gets the correct version of the artifact, whether it's the one we
        build by default, or one we have to produce ourselves.
        Returns a tuple of version and built image."""
    
        global LAST_BUILD_VERSION
    
        version = request.param
    
        if version == 1:
            pytest.fail()
    
        if (
            version &gt;= 2
            and not version_is_minimum(bitbake_variables, "mender-artifact", "2.0.0")
        ) or (
            version &gt;= 3
            and not version_is_minimum(bitbake_variables, "mender-artifact", "3.0.0")
        ):
            pytest.skip("Requires version %d of mender-artifact format." % version)
    
        if version_is_minimum(bitbake_variables, "mender-artifact", "3.0.0"):
            default_version = 3
        elif version_is_minimum(bitbake_variables, "mender-artifact", "2.0.0"):
            default_version = 2
        else:
            default_version = 2
    
        if LAST_BUILD_VERSION != version:
            # Run a separate build for this artifact. This doesn't conflict with the
            # above version because the non-default version ends up in a different
            # directory.
            if version != default_version:
                build_image(
                    prepared_test_build["build_dir"],
                    prepared_test_build["bitbake_corebase"],
                    bitbake_image,
&gt;                   ['MENDER_ARTIFACT_EXTRA_ARGS = "-v %d"' % version],
                )

test_mender-artifact.py:71: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
image-tests/tests/utils/common/common.py:403: in build_image
    _run_bitbake(bitbake_image, init_env_cmd, capture)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

target = 'core-image-full-cmdline'
env_setup_cmd = 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw'
capture = False

    def _run_bitbake(target, env_setup_cmd, capture=False):
        cmd = "%s &amp;&amp; bitbake %s" % (env_setup_cmd, target)
        ps = run_verbose(cmd, capture=subprocess.PIPE)
        output = ""
        try:
            # Cannot use for loop here due to buffering and iterators.
            while True:
                line = ps.stdout.readline().decode()
                if not line:
                    break
    
                if line.find("is not a recognized MENDER_ variable") &gt;= 0:
                    pytest.fail(
                        "Found variable which is not in mender-vars.json: %s" % line.strip()
                    )
    
                if capture:
                    output += line
                else:
                    sys.stdout.write(line)
        finally:
            # Empty any remaining lines.
            try:
                if capture:
                    output += ps.stdout.readlines().decode()
                else:
                    ps.stdout.readlines()
            except:
                pass
            ps.wait()
            if ps.returncode != 0:
                e = subprocess.CalledProcessError(ps.returncode, cmd)
                if capture:
                    e.output = output
&gt;               raise e
E               subprocess.CalledProcessError: Command 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw &amp;&amp; bitbake core-image-full-cmdline' returned non-zero exit status 1.

image-tests/tests/utils/common/common.py:440: CalledProcessError</error></testcase><testcase classname="test_mender-artifact.TestMenderArtifact" name="test_artifacts_validation[3]" time="21.546"><error message="failed on setup with &quot;subprocess.CalledProcessError: Command 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw &amp;&amp; bitbake core-image-full-cmdline' returned non-zero exit status 1.&quot;">request = &lt;SubRequest 'versioned_mender_image' for &lt;Function test_artifacts_validation[3]&gt;&gt;
prepared_test_build = {'bitbake_corebase': '/builds/Northern.tech/Mender', 'build_dir': '/builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw'}
latest_mender_image = '/builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/tmp/deploy/images/qemux86-64/core-image-full-cmdline-qemux86-64-bios-grub-gpt.mender'
bitbake_variables = {'ABIEXTENSION': '', 'ABIEXTENSION_class-nativesdk': '', 'ALLOW_EMPTY_core-image-minimal-dbg': '1', 'ALLOW_EMPTY_core-image-minimal-dev': '1', ...}
bitbake_image = 'core-image-full-cmdline'

    @pytest.fixture(scope="function", params=[2, 3])
    def versioned_mender_image(
        request, prepared_test_build, latest_mender_image, bitbake_variables, bitbake_image
    ):
        """Gets the correct version of the artifact, whether it's the one we
        build by default, or one we have to produce ourselves.
        Returns a tuple of version and built image."""
    
        global LAST_BUILD_VERSION
    
        version = request.param
    
        if version == 1:
            pytest.fail()
    
        if (
            version &gt;= 2
            and not version_is_minimum(bitbake_variables, "mender-artifact", "2.0.0")
        ) or (
            version &gt;= 3
            and not version_is_minimum(bitbake_variables, "mender-artifact", "3.0.0")
        ):
            pytest.skip("Requires version %d of mender-artifact format." % version)
    
        if version_is_minimum(bitbake_variables, "mender-artifact", "3.0.0"):
            default_version = 3
        elif version_is_minimum(bitbake_variables, "mender-artifact", "2.0.0"):
            default_version = 2
        else:
            default_version = 2
    
        if LAST_BUILD_VERSION != version:
            # Run a separate build for this artifact. This doesn't conflict with the
            # above version because the non-default version ends up in a different
            # directory.
            if version != default_version:
                build_image(
                    prepared_test_build["build_dir"],
                    prepared_test_build["bitbake_corebase"],
                    bitbake_image,
                    ['MENDER_ARTIFACT_EXTRA_ARGS = "-v %d"' % version],
                )
            else:
                build_image(
                    prepared_test_build["build_dir"],
                    prepared_test_build["bitbake_corebase"],
&gt;                   bitbake_image,
                )

test_mender-artifact.py:77: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
image-tests/tests/utils/common/common.py:403: in build_image
    _run_bitbake(bitbake_image, init_env_cmd, capture)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

target = 'core-image-full-cmdline'
env_setup_cmd = 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw'
capture = False

    def _run_bitbake(target, env_setup_cmd, capture=False):
        cmd = "%s &amp;&amp; bitbake %s" % (env_setup_cmd, target)
        ps = run_verbose(cmd, capture=subprocess.PIPE)
        output = ""
        try:
            # Cannot use for loop here due to buffering and iterators.
            while True:
                line = ps.stdout.readline().decode()
                if not line:
                    break
    
                if line.find("is not a recognized MENDER_ variable") &gt;= 0:
                    pytest.fail(
                        "Found variable which is not in mender-vars.json: %s" % line.strip()
                    )
    
                if capture:
                    output += line
                else:
                    sys.stdout.write(line)
        finally:
            # Empty any remaining lines.
            try:
                if capture:
                    output += ps.stdout.readlines().decode()
                else:
                    ps.stdout.readlines()
            except:
                pass
            ps.wait()
            if ps.returncode != 0:
                e = subprocess.CalledProcessError(ps.returncode, cmd)
                if capture:
                    e.output = output
&gt;               raise e
E               subprocess.CalledProcessError: Command 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw &amp;&amp; bitbake core-image-full-cmdline' returned non-zero exit status 1.

image-tests/tests/utils/common/common.py:440: CalledProcessError</error></testcase><testcase classname="test_mender-artifact.TestMenderArtifact" name="test_artifacts_rootfs_size[2]" time="21.560"><error message="failed on setup with &quot;subprocess.CalledProcessError: Command 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw &amp;&amp; bitbake core-image-full-cmdline' returned non-zero exit status 1.&quot;">request = &lt;SubRequest 'versioned_mender_image' for &lt;Function test_artifacts_rootfs_size[2]&gt;&gt;
prepared_test_build = {'bitbake_corebase': '/builds/Northern.tech/Mender', 'build_dir': '/builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw'}
latest_mender_image = '/builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/tmp/deploy/images/qemux86-64/core-image-full-cmdline-qemux86-64-bios-grub-gpt.mender'
bitbake_variables = {'ABIEXTENSION': '', 'ABIEXTENSION_class-nativesdk': '', 'ALLOW_EMPTY_core-image-minimal-dbg': '1', 'ALLOW_EMPTY_core-image-minimal-dev': '1', ...}
bitbake_image = 'core-image-full-cmdline'

    @pytest.fixture(scope="function", params=[2, 3])
    def versioned_mender_image(
        request, prepared_test_build, latest_mender_image, bitbake_variables, bitbake_image
    ):
        """Gets the correct version of the artifact, whether it's the one we
        build by default, or one we have to produce ourselves.
        Returns a tuple of version and built image."""
    
        global LAST_BUILD_VERSION
    
        version = request.param
    
        if version == 1:
            pytest.fail()
    
        if (
            version &gt;= 2
            and not version_is_minimum(bitbake_variables, "mender-artifact", "2.0.0")
        ) or (
            version &gt;= 3
            and not version_is_minimum(bitbake_variables, "mender-artifact", "3.0.0")
        ):
            pytest.skip("Requires version %d of mender-artifact format." % version)
    
        if version_is_minimum(bitbake_variables, "mender-artifact", "3.0.0"):
            default_version = 3
        elif version_is_minimum(bitbake_variables, "mender-artifact", "2.0.0"):
            default_version = 2
        else:
            default_version = 2
    
        if LAST_BUILD_VERSION != version:
            # Run a separate build for this artifact. This doesn't conflict with the
            # above version because the non-default version ends up in a different
            # directory.
            if version != default_version:
                build_image(
                    prepared_test_build["build_dir"],
                    prepared_test_build["bitbake_corebase"],
                    bitbake_image,
&gt;                   ['MENDER_ARTIFACT_EXTRA_ARGS = "-v %d"' % version],
                )

test_mender-artifact.py:71: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
image-tests/tests/utils/common/common.py:403: in build_image
    _run_bitbake(bitbake_image, init_env_cmd, capture)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

target = 'core-image-full-cmdline'
env_setup_cmd = 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw'
capture = False

    def _run_bitbake(target, env_setup_cmd, capture=False):
        cmd = "%s &amp;&amp; bitbake %s" % (env_setup_cmd, target)
        ps = run_verbose(cmd, capture=subprocess.PIPE)
        output = ""
        try:
            # Cannot use for loop here due to buffering and iterators.
            while True:
                line = ps.stdout.readline().decode()
                if not line:
                    break
    
                if line.find("is not a recognized MENDER_ variable") &gt;= 0:
                    pytest.fail(
                        "Found variable which is not in mender-vars.json: %s" % line.strip()
                    )
    
                if capture:
                    output += line
                else:
                    sys.stdout.write(line)
        finally:
            # Empty any remaining lines.
            try:
                if capture:
                    output += ps.stdout.readlines().decode()
                else:
                    ps.stdout.readlines()
            except:
                pass
            ps.wait()
            if ps.returncode != 0:
                e = subprocess.CalledProcessError(ps.returncode, cmd)
                if capture:
                    e.output = output
&gt;               raise e
E               subprocess.CalledProcessError: Command 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw &amp;&amp; bitbake core-image-full-cmdline' returned non-zero exit status 1.

image-tests/tests/utils/common/common.py:440: CalledProcessError</error></testcase><testcase classname="test_mender-artifact.TestMenderArtifact" name="test_artifacts_rootfs_size[3]" time="22.834"><error message="failed on setup with &quot;subprocess.CalledProcessError: Command 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw &amp;&amp; bitbake core-image-full-cmdline' returned non-zero exit status 1.&quot;">request = &lt;SubRequest 'versioned_mender_image' for &lt;Function test_artifacts_rootfs_size[3]&gt;&gt;
prepared_test_build = {'bitbake_corebase': '/builds/Northern.tech/Mender', 'build_dir': '/builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw'}
latest_mender_image = '/builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/tmp/deploy/images/qemux86-64/core-image-full-cmdline-qemux86-64-bios-grub-gpt.mender'
bitbake_variables = {'ABIEXTENSION': '', 'ABIEXTENSION_class-nativesdk': '', 'ALLOW_EMPTY_core-image-minimal-dbg': '1', 'ALLOW_EMPTY_core-image-minimal-dev': '1', ...}
bitbake_image = 'core-image-full-cmdline'

    @pytest.fixture(scope="function", params=[2, 3])
    def versioned_mender_image(
        request, prepared_test_build, latest_mender_image, bitbake_variables, bitbake_image
    ):
        """Gets the correct version of the artifact, whether it's the one we
        build by default, or one we have to produce ourselves.
        Returns a tuple of version and built image."""
    
        global LAST_BUILD_VERSION
    
        version = request.param
    
        if version == 1:
            pytest.fail()
    
        if (
            version &gt;= 2
            and not version_is_minimum(bitbake_variables, "mender-artifact", "2.0.0")
        ) or (
            version &gt;= 3
            and not version_is_minimum(bitbake_variables, "mender-artifact", "3.0.0")
        ):
            pytest.skip("Requires version %d of mender-artifact format." % version)
    
        if version_is_minimum(bitbake_variables, "mender-artifact", "3.0.0"):
            default_version = 3
        elif version_is_minimum(bitbake_variables, "mender-artifact", "2.0.0"):
            default_version = 2
        else:
            default_version = 2
    
        if LAST_BUILD_VERSION != version:
            # Run a separate build for this artifact. This doesn't conflict with the
            # above version because the non-default version ends up in a different
            # directory.
            if version != default_version:
                build_image(
                    prepared_test_build["build_dir"],
                    prepared_test_build["bitbake_corebase"],
                    bitbake_image,
                    ['MENDER_ARTIFACT_EXTRA_ARGS = "-v %d"' % version],
                )
            else:
                build_image(
                    prepared_test_build["build_dir"],
                    prepared_test_build["bitbake_corebase"],
&gt;                   bitbake_image,
                )

test_mender-artifact.py:77: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
image-tests/tests/utils/common/common.py:403: in build_image
    _run_bitbake(bitbake_image, init_env_cmd, capture)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

target = 'core-image-full-cmdline'
env_setup_cmd = 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw'
capture = False

    def _run_bitbake(target, env_setup_cmd, capture=False):
        cmd = "%s &amp;&amp; bitbake %s" % (env_setup_cmd, target)
        ps = run_verbose(cmd, capture=subprocess.PIPE)
        output = ""
        try:
            # Cannot use for loop here due to buffering and iterators.
            while True:
                line = ps.stdout.readline().decode()
                if not line:
                    break
    
                if line.find("is not a recognized MENDER_ variable") &gt;= 0:
                    pytest.fail(
                        "Found variable which is not in mender-vars.json: %s" % line.strip()
                    )
    
                if capture:
                    output += line
                else:
                    sys.stdout.write(line)
        finally:
            # Empty any remaining lines.
            try:
                if capture:
                    output += ps.stdout.readlines().decode()
                else:
                    ps.stdout.readlines()
            except:
                pass
            ps.wait()
            if ps.returncode != 0:
                e = subprocess.CalledProcessError(ps.returncode, cmd)
                if capture:
                    e.output = output
&gt;               raise e
E               subprocess.CalledProcessError: Command 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw &amp;&amp; bitbake core-image-full-cmdline' returned non-zero exit status 1.

image-tests/tests/utils/common/common.py:440: CalledProcessError</error></testcase><testcase classname="test_mender-connect.TestMenderConnect" name="test_mender_connect_auth_changes" time="0.001"><error message="failed on setup with &quot;subprocess.CalledProcessError: Command 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw &amp;&amp; bitbake core-image-full-cmdline' returned non-zero exit status 1.&quot;">request = &lt;SubRequest 'setup_board' for &lt;Function test_dbus_system_configuration_file&gt;&gt;
qemu_wrapper = '../../meta-mender-qemu/scripts/mender-qemu'
build_image_fn = &lt;function build_image_fn.&lt;locals&gt;.img_builder at 0x7f71f5f60378&gt;
session_connection = &lt;Connection host=localhost user=root port=8822&gt;
board_type = 'qemux86-64-bios-grub-gpt', conversion = False

    @pytest.fixture(scope="session")
    def setup_board(
        request, qemu_wrapper, build_image_fn, session_connection, board_type, conversion
    ):
    
        print("board type: ", board_type)
    
        if "qemu" in board_type:
&gt;           image_dir = build_image_fn()

image-tests/tests/utils/fixtures/fixtures.py:189: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
image-tests/tests/utils/fixtures/fixtures.py:377: in img_builder
    ['EXTRA_IMAGE_FEATURES_append = " ssh-server-openssh"',],
image-tests/tests/utils/common/common.py:403: in build_image
    _run_bitbake(bitbake_image, init_env_cmd, capture)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

target = 'core-image-full-cmdline'
env_setup_cmd = 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw'
capture = False

    def _run_bitbake(target, env_setup_cmd, capture=False):
        cmd = "%s &amp;&amp; bitbake %s" % (env_setup_cmd, target)
        ps = run_verbose(cmd, capture=subprocess.PIPE)
        output = ""
        try:
            # Cannot use for loop here due to buffering and iterators.
            while True:
                line = ps.stdout.readline().decode()
                if not line:
                    break
    
                if line.find("is not a recognized MENDER_ variable") &gt;= 0:
                    pytest.fail(
                        "Found variable which is not in mender-vars.json: %s" % line.strip()
                    )
    
                if capture:
                    output += line
                else:
                    sys.stdout.write(line)
        finally:
            # Empty any remaining lines.
            try:
                if capture:
                    output += ps.stdout.readlines().decode()
                else:
                    ps.stdout.readlines()
            except:
                pass
            ps.wait()
            if ps.returncode != 0:
                e = subprocess.CalledProcessError(ps.returncode, cmd)
                if capture:
                    e.output = output
&gt;               raise e
E               subprocess.CalledProcessError: Command 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw &amp;&amp; bitbake core-image-full-cmdline' returned non-zero exit status 1.

image-tests/tests/utils/common/common.py:440: CalledProcessError</error></testcase><testcase classname="test_mender-connect.TestMenderConnect" name="test_mender_connect_reconnect" time="0.001"><error message="failed on setup with &quot;subprocess.CalledProcessError: Command 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw &amp;&amp; bitbake core-image-full-cmdline' returned non-zero exit status 1.&quot;">request = &lt;SubRequest 'setup_board' for &lt;Function test_dbus_system_configuration_file&gt;&gt;
qemu_wrapper = '../../meta-mender-qemu/scripts/mender-qemu'
build_image_fn = &lt;function build_image_fn.&lt;locals&gt;.img_builder at 0x7f71f5f60378&gt;
session_connection = &lt;Connection host=localhost user=root port=8822&gt;
board_type = 'qemux86-64-bios-grub-gpt', conversion = False

    @pytest.fixture(scope="session")
    def setup_board(
        request, qemu_wrapper, build_image_fn, session_connection, board_type, conversion
    ):
    
        print("board type: ", board_type)
    
        if "qemu" in board_type:
&gt;           image_dir = build_image_fn()

image-tests/tests/utils/fixtures/fixtures.py:189: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
image-tests/tests/utils/fixtures/fixtures.py:377: in img_builder
    ['EXTRA_IMAGE_FEATURES_append = " ssh-server-openssh"',],
image-tests/tests/utils/common/common.py:403: in build_image
    _run_bitbake(bitbake_image, init_env_cmd, capture)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

target = 'core-image-full-cmdline'
env_setup_cmd = 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw'
capture = False

    def _run_bitbake(target, env_setup_cmd, capture=False):
        cmd = "%s &amp;&amp; bitbake %s" % (env_setup_cmd, target)
        ps = run_verbose(cmd, capture=subprocess.PIPE)
        output = ""
        try:
            # Cannot use for loop here due to buffering and iterators.
            while True:
                line = ps.stdout.readline().decode()
                if not line:
                    break
    
                if line.find("is not a recognized MENDER_ variable") &gt;= 0:
                    pytest.fail(
                        "Found variable which is not in mender-vars.json: %s" % line.strip()
                    )
    
                if capture:
                    output += line
                else:
                    sys.stdout.write(line)
        finally:
            # Empty any remaining lines.
            try:
                if capture:
                    output += ps.stdout.readlines().decode()
                else:
                    ps.stdout.readlines()
            except:
                pass
            ps.wait()
            if ps.returncode != 0:
                e = subprocess.CalledProcessError(ps.returncode, cmd)
                if capture:
                    e.output = output
&gt;               raise e
E               subprocess.CalledProcessError: Command 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw &amp;&amp; bitbake core-image-full-cmdline' returned non-zero exit status 1.

image-tests/tests/utils/common/common.py:440: CalledProcessError</error></testcase><testcase classname="test_os_integration.TestOsIntegration" name="test_syslogger" time="0.001"><error message="failed on setup with &quot;subprocess.CalledProcessError: Command 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw &amp;&amp; bitbake core-image-full-cmdline' returned non-zero exit status 1.&quot;">request = &lt;SubRequest 'setup_board' for &lt;Function test_dbus_system_configuration_file&gt;&gt;
qemu_wrapper = '../../meta-mender-qemu/scripts/mender-qemu'
build_image_fn = &lt;function build_image_fn.&lt;locals&gt;.img_builder at 0x7f71f5f60378&gt;
session_connection = &lt;Connection host=localhost user=root port=8822&gt;
board_type = 'qemux86-64-bios-grub-gpt', conversion = False

    @pytest.fixture(scope="session")
    def setup_board(
        request, qemu_wrapper, build_image_fn, session_connection, board_type, conversion
    ):
    
        print("board type: ", board_type)
    
        if "qemu" in board_type:
&gt;           image_dir = build_image_fn()

image-tests/tests/utils/fixtures/fixtures.py:189: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
image-tests/tests/utils/fixtures/fixtures.py:377: in img_builder
    ['EXTRA_IMAGE_FEATURES_append = " ssh-server-openssh"',],
image-tests/tests/utils/common/common.py:403: in build_image
    _run_bitbake(bitbake_image, init_env_cmd, capture)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

target = 'core-image-full-cmdline'
env_setup_cmd = 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw'
capture = False

    def _run_bitbake(target, env_setup_cmd, capture=False):
        cmd = "%s &amp;&amp; bitbake %s" % (env_setup_cmd, target)
        ps = run_verbose(cmd, capture=subprocess.PIPE)
        output = ""
        try:
            # Cannot use for loop here due to buffering and iterators.
            while True:
                line = ps.stdout.readline().decode()
                if not line:
                    break
    
                if line.find("is not a recognized MENDER_ variable") &gt;= 0:
                    pytest.fail(
                        "Found variable which is not in mender-vars.json: %s" % line.strip()
                    )
    
                if capture:
                    output += line
                else:
                    sys.stdout.write(line)
        finally:
            # Empty any remaining lines.
            try:
                if capture:
                    output += ps.stdout.readlines().decode()
                else:
                    ps.stdout.readlines()
            except:
                pass
            ps.wait()
            if ps.returncode != 0:
                e = subprocess.CalledProcessError(ps.returncode, cmd)
                if capture:
                    e.output = output
&gt;               raise e
E               subprocess.CalledProcessError: Command 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw &amp;&amp; bitbake core-image-full-cmdline' returned non-zero exit status 1.

image-tests/tests/utils/common/common.py:440: CalledProcessError</error></testcase><testcase classname="test_snapshot.TestSnapshot" name="test_basic_snapshot[compression0]" time="0.001"><error message="failed on setup with &quot;subprocess.CalledProcessError: Command 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw &amp;&amp; bitbake core-image-full-cmdline' returned non-zero exit status 1.&quot;">request = &lt;SubRequest 'setup_board' for &lt;Function test_dbus_system_configuration_file&gt;&gt;
qemu_wrapper = '../../meta-mender-qemu/scripts/mender-qemu'
build_image_fn = &lt;function build_image_fn.&lt;locals&gt;.img_builder at 0x7f71f5f60378&gt;
session_connection = &lt;Connection host=localhost user=root port=8822&gt;
board_type = 'qemux86-64-bios-grub-gpt', conversion = False

    @pytest.fixture(scope="session")
    def setup_board(
        request, qemu_wrapper, build_image_fn, session_connection, board_type, conversion
    ):
    
        print("board type: ", board_type)
    
        if "qemu" in board_type:
&gt;           image_dir = build_image_fn()

image-tests/tests/utils/fixtures/fixtures.py:189: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
image-tests/tests/utils/fixtures/fixtures.py:377: in img_builder
    ['EXTRA_IMAGE_FEATURES_append = " ssh-server-openssh"',],
image-tests/tests/utils/common/common.py:403: in build_image
    _run_bitbake(bitbake_image, init_env_cmd, capture)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

target = 'core-image-full-cmdline'
env_setup_cmd = 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw'
capture = False

    def _run_bitbake(target, env_setup_cmd, capture=False):
        cmd = "%s &amp;&amp; bitbake %s" % (env_setup_cmd, target)
        ps = run_verbose(cmd, capture=subprocess.PIPE)
        output = ""
        try:
            # Cannot use for loop here due to buffering and iterators.
            while True:
                line = ps.stdout.readline().decode()
                if not line:
                    break
    
                if line.find("is not a recognized MENDER_ variable") &gt;= 0:
                    pytest.fail(
                        "Found variable which is not in mender-vars.json: %s" % line.strip()
                    )
    
                if capture:
                    output += line
                else:
                    sys.stdout.write(line)
        finally:
            # Empty any remaining lines.
            try:
                if capture:
                    output += ps.stdout.readlines().decode()
                else:
                    ps.stdout.readlines()
            except:
                pass
            ps.wait()
            if ps.returncode != 0:
                e = subprocess.CalledProcessError(ps.returncode, cmd)
                if capture:
                    e.output = output
&gt;               raise e
E               subprocess.CalledProcessError: Command 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw &amp;&amp; bitbake core-image-full-cmdline' returned non-zero exit status 1.

image-tests/tests/utils/common/common.py:440: CalledProcessError</error></testcase><testcase classname="test_snapshot.TestSnapshot" name="test_basic_snapshot[compression1]" time="0.001"><error message="failed on setup with &quot;subprocess.CalledProcessError: Command 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw &amp;&amp; bitbake core-image-full-cmdline' returned non-zero exit status 1.&quot;">request = &lt;SubRequest 'setup_board' for &lt;Function test_dbus_system_configuration_file&gt;&gt;
qemu_wrapper = '../../meta-mender-qemu/scripts/mender-qemu'
build_image_fn = &lt;function build_image_fn.&lt;locals&gt;.img_builder at 0x7f71f5f60378&gt;
session_connection = &lt;Connection host=localhost user=root port=8822&gt;
board_type = 'qemux86-64-bios-grub-gpt', conversion = False

    @pytest.fixture(scope="session")
    def setup_board(
        request, qemu_wrapper, build_image_fn, session_connection, board_type, conversion
    ):
    
        print("board type: ", board_type)
    
        if "qemu" in board_type:
&gt;           image_dir = build_image_fn()

image-tests/tests/utils/fixtures/fixtures.py:189: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
image-tests/tests/utils/fixtures/fixtures.py:377: in img_builder
    ['EXTRA_IMAGE_FEATURES_append = " ssh-server-openssh"',],
image-tests/tests/utils/common/common.py:403: in build_image
    _run_bitbake(bitbake_image, init_env_cmd, capture)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

target = 'core-image-full-cmdline'
env_setup_cmd = 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw'
capture = False

    def _run_bitbake(target, env_setup_cmd, capture=False):
        cmd = "%s &amp;&amp; bitbake %s" % (env_setup_cmd, target)
        ps = run_verbose(cmd, capture=subprocess.PIPE)
        output = ""
        try:
            # Cannot use for loop here due to buffering and iterators.
            while True:
                line = ps.stdout.readline().decode()
                if not line:
                    break
    
                if line.find("is not a recognized MENDER_ variable") &gt;= 0:
                    pytest.fail(
                        "Found variable which is not in mender-vars.json: %s" % line.strip()
                    )
    
                if capture:
                    output += line
                else:
                    sys.stdout.write(line)
        finally:
            # Empty any remaining lines.
            try:
                if capture:
                    output += ps.stdout.readlines().decode()
                else:
                    ps.stdout.readlines()
            except:
                pass
            ps.wait()
            if ps.returncode != 0:
                e = subprocess.CalledProcessError(ps.returncode, cmd)
                if capture:
                    e.output = output
&gt;               raise e
E               subprocess.CalledProcessError: Command 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw &amp;&amp; bitbake core-image-full-cmdline' returned non-zero exit status 1.

image-tests/tests/utils/common/common.py:440: CalledProcessError</error></testcase><testcase classname="test_snapshot.TestSnapshot" name="test_snapshot_device_file" time="0.001"><error message="failed on setup with &quot;subprocess.CalledProcessError: Command 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw &amp;&amp; bitbake core-image-full-cmdline' returned non-zero exit status 1.&quot;">request = &lt;SubRequest 'setup_board' for &lt;Function test_dbus_system_configuration_file&gt;&gt;
qemu_wrapper = '../../meta-mender-qemu/scripts/mender-qemu'
build_image_fn = &lt;function build_image_fn.&lt;locals&gt;.img_builder at 0x7f71f5f60378&gt;
session_connection = &lt;Connection host=localhost user=root port=8822&gt;
board_type = 'qemux86-64-bios-grub-gpt', conversion = False

    @pytest.fixture(scope="session")
    def setup_board(
        request, qemu_wrapper, build_image_fn, session_connection, board_type, conversion
    ):
    
        print("board type: ", board_type)
    
        if "qemu" in board_type:
&gt;           image_dir = build_image_fn()

image-tests/tests/utils/fixtures/fixtures.py:189: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
image-tests/tests/utils/fixtures/fixtures.py:377: in img_builder
    ['EXTRA_IMAGE_FEATURES_append = " ssh-server-openssh"',],
image-tests/tests/utils/common/common.py:403: in build_image
    _run_bitbake(bitbake_image, init_env_cmd, capture)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

target = 'core-image-full-cmdline'
env_setup_cmd = 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw'
capture = False

    def _run_bitbake(target, env_setup_cmd, capture=False):
        cmd = "%s &amp;&amp; bitbake %s" % (env_setup_cmd, target)
        ps = run_verbose(cmd, capture=subprocess.PIPE)
        output = ""
        try:
            # Cannot use for loop here due to buffering and iterators.
            while True:
                line = ps.stdout.readline().decode()
                if not line:
                    break
    
                if line.find("is not a recognized MENDER_ variable") &gt;= 0:
                    pytest.fail(
                        "Found variable which is not in mender-vars.json: %s" % line.strip()
                    )
    
                if capture:
                    output += line
                else:
                    sys.stdout.write(line)
        finally:
            # Empty any remaining lines.
            try:
                if capture:
                    output += ps.stdout.readlines().decode()
                else:
                    ps.stdout.readlines()
            except:
                pass
            ps.wait()
            if ps.returncode != 0:
                e = subprocess.CalledProcessError(ps.returncode, cmd)
                if capture:
                    e.output = output
&gt;               raise e
E               subprocess.CalledProcessError: Command 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw &amp;&amp; bitbake core-image-full-cmdline' returned non-zero exit status 1.

image-tests/tests/utils/common/common.py:440: CalledProcessError</error></testcase><testcase classname="test_snapshot.TestSnapshot" name="test_snapshot_inactive" time="0.001"><error message="failed on setup with &quot;subprocess.CalledProcessError: Command 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw &amp;&amp; bitbake core-image-full-cmdline' returned non-zero exit status 1.&quot;">request = &lt;SubRequest 'setup_board' for &lt;Function test_dbus_system_configuration_file&gt;&gt;
qemu_wrapper = '../../meta-mender-qemu/scripts/mender-qemu'
build_image_fn = &lt;function build_image_fn.&lt;locals&gt;.img_builder at 0x7f71f5f60378&gt;
session_connection = &lt;Connection host=localhost user=root port=8822&gt;
board_type = 'qemux86-64-bios-grub-gpt', conversion = False

    @pytest.fixture(scope="session")
    def setup_board(
        request, qemu_wrapper, build_image_fn, session_connection, board_type, conversion
    ):
    
        print("board type: ", board_type)
    
        if "qemu" in board_type:
&gt;           image_dir = build_image_fn()

image-tests/tests/utils/fixtures/fixtures.py:189: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
image-tests/tests/utils/fixtures/fixtures.py:377: in img_builder
    ['EXTRA_IMAGE_FEATURES_append = " ssh-server-openssh"',],
image-tests/tests/utils/common/common.py:403: in build_image
    _run_bitbake(bitbake_image, init_env_cmd, capture)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

target = 'core-image-full-cmdline'
env_setup_cmd = 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw'
capture = False

    def _run_bitbake(target, env_setup_cmd, capture=False):
        cmd = "%s &amp;&amp; bitbake %s" % (env_setup_cmd, target)
        ps = run_verbose(cmd, capture=subprocess.PIPE)
        output = ""
        try:
            # Cannot use for loop here due to buffering and iterators.
            while True:
                line = ps.stdout.readline().decode()
                if not line:
                    break
    
                if line.find("is not a recognized MENDER_ variable") &gt;= 0:
                    pytest.fail(
                        "Found variable which is not in mender-vars.json: %s" % line.strip()
                    )
    
                if capture:
                    output += line
                else:
                    sys.stdout.write(line)
        finally:
            # Empty any remaining lines.
            try:
                if capture:
                    output += ps.stdout.readlines().decode()
                else:
                    ps.stdout.readlines()
            except:
                pass
            ps.wait()
            if ps.returncode != 0:
                e = subprocess.CalledProcessError(ps.returncode, cmd)
                if capture:
                    e.output = output
&gt;               raise e
E               subprocess.CalledProcessError: Command 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw &amp;&amp; bitbake core-image-full-cmdline' returned non-zero exit status 1.

image-tests/tests/utils/common/common.py:440: CalledProcessError</error></testcase><testcase classname="test_snapshot.TestSnapshot" name="test_snapshot_avoid_deadlock" time="0.001"><error message="failed on setup with &quot;subprocess.CalledProcessError: Command 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw &amp;&amp; bitbake core-image-full-cmdline' returned non-zero exit status 1.&quot;">request = &lt;SubRequest 'setup_board' for &lt;Function test_dbus_system_configuration_file&gt;&gt;
qemu_wrapper = '../../meta-mender-qemu/scripts/mender-qemu'
build_image_fn = &lt;function build_image_fn.&lt;locals&gt;.img_builder at 0x7f71f5f60378&gt;
session_connection = &lt;Connection host=localhost user=root port=8822&gt;
board_type = 'qemux86-64-bios-grub-gpt', conversion = False

    @pytest.fixture(scope="session")
    def setup_board(
        request, qemu_wrapper, build_image_fn, session_connection, board_type, conversion
    ):
    
        print("board type: ", board_type)
    
        if "qemu" in board_type:
&gt;           image_dir = build_image_fn()

image-tests/tests/utils/fixtures/fixtures.py:189: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
image-tests/tests/utils/fixtures/fixtures.py:377: in img_builder
    ['EXTRA_IMAGE_FEATURES_append = " ssh-server-openssh"',],
image-tests/tests/utils/common/common.py:403: in build_image
    _run_bitbake(bitbake_image, init_env_cmd, capture)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

target = 'core-image-full-cmdline'
env_setup_cmd = 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw'
capture = False

    def _run_bitbake(target, env_setup_cmd, capture=False):
        cmd = "%s &amp;&amp; bitbake %s" % (env_setup_cmd, target)
        ps = run_verbose(cmd, capture=subprocess.PIPE)
        output = ""
        try:
            # Cannot use for loop here due to buffering and iterators.
            while True:
                line = ps.stdout.readline().decode()
                if not line:
                    break
    
                if line.find("is not a recognized MENDER_ variable") &gt;= 0:
                    pytest.fail(
                        "Found variable which is not in mender-vars.json: %s" % line.strip()
                    )
    
                if capture:
                    output += line
                else:
                    sys.stdout.write(line)
        finally:
            # Empty any remaining lines.
            try:
                if capture:
                    output += ps.stdout.readlines().decode()
                else:
                    ps.stdout.readlines()
            except:
                pass
            ps.wait()
            if ps.returncode != 0:
                e = subprocess.CalledProcessError(ps.returncode, cmd)
                if capture:
                    e.output = output
&gt;               raise e
E               subprocess.CalledProcessError: Command 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw &amp;&amp; bitbake core-image-full-cmdline' returned non-zero exit status 1.

image-tests/tests/utils/common/common.py:440: CalledProcessError</error></testcase><testcase classname="test_snapshot.TestSnapshot" name="test_snapshot_using_mender_artifact[]" time="0.001"><error message="failed on setup with &quot;subprocess.CalledProcessError: Command 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw &amp;&amp; bitbake core-image-full-cmdline' returned non-zero exit status 1.&quot;">request = &lt;SubRequest 'setup_board' for &lt;Function test_dbus_system_configuration_file&gt;&gt;
qemu_wrapper = '../../meta-mender-qemu/scripts/mender-qemu'
build_image_fn = &lt;function build_image_fn.&lt;locals&gt;.img_builder at 0x7f71f5f60378&gt;
session_connection = &lt;Connection host=localhost user=root port=8822&gt;
board_type = 'qemux86-64-bios-grub-gpt', conversion = False

    @pytest.fixture(scope="session")
    def setup_board(
        request, qemu_wrapper, build_image_fn, session_connection, board_type, conversion
    ):
    
        print("board type: ", board_type)
    
        if "qemu" in board_type:
&gt;           image_dir = build_image_fn()

image-tests/tests/utils/fixtures/fixtures.py:189: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
image-tests/tests/utils/fixtures/fixtures.py:377: in img_builder
    ['EXTRA_IMAGE_FEATURES_append = " ssh-server-openssh"',],
image-tests/tests/utils/common/common.py:403: in build_image
    _run_bitbake(bitbake_image, init_env_cmd, capture)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

target = 'core-image-full-cmdline'
env_setup_cmd = 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw'
capture = False

    def _run_bitbake(target, env_setup_cmd, capture=False):
        cmd = "%s &amp;&amp; bitbake %s" % (env_setup_cmd, target)
        ps = run_verbose(cmd, capture=subprocess.PIPE)
        output = ""
        try:
            # Cannot use for loop here due to buffering and iterators.
            while True:
                line = ps.stdout.readline().decode()
                if not line:
                    break
    
                if line.find("is not a recognized MENDER_ variable") &gt;= 0:
                    pytest.fail(
                        "Found variable which is not in mender-vars.json: %s" % line.strip()
                    )
    
                if capture:
                    output += line
                else:
                    sys.stdout.write(line)
        finally:
            # Empty any remaining lines.
            try:
                if capture:
                    output += ps.stdout.readlines().decode()
                else:
                    ps.stdout.readlines()
            except:
                pass
            ps.wait()
            if ps.returncode != 0:
                e = subprocess.CalledProcessError(ps.returncode, cmd)
                if capture:
                    e.output = output
&gt;               raise e
E               subprocess.CalledProcessError: Command 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw &amp;&amp; bitbake core-image-full-cmdline' returned non-zero exit status 1.

image-tests/tests/utils/common/common.py:440: CalledProcessError</error></testcase><testcase classname="test_snapshot.TestSnapshot" name="test_snapshot_using_mender_artifact[screen -D -m -L -Logfile screen.log.tmp]" time="0.001"><error message="failed on setup with &quot;subprocess.CalledProcessError: Command 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw &amp;&amp; bitbake core-image-full-cmdline' returned non-zero exit status 1.&quot;">request = &lt;SubRequest 'setup_board' for &lt;Function test_dbus_system_configuration_file&gt;&gt;
qemu_wrapper = '../../meta-mender-qemu/scripts/mender-qemu'
build_image_fn = &lt;function build_image_fn.&lt;locals&gt;.img_builder at 0x7f71f5f60378&gt;
session_connection = &lt;Connection host=localhost user=root port=8822&gt;
board_type = 'qemux86-64-bios-grub-gpt', conversion = False

    @pytest.fixture(scope="session")
    def setup_board(
        request, qemu_wrapper, build_image_fn, session_connection, board_type, conversion
    ):
    
        print("board type: ", board_type)
    
        if "qemu" in board_type:
&gt;           image_dir = build_image_fn()

image-tests/tests/utils/fixtures/fixtures.py:189: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
image-tests/tests/utils/fixtures/fixtures.py:377: in img_builder
    ['EXTRA_IMAGE_FEATURES_append = " ssh-server-openssh"',],
image-tests/tests/utils/common/common.py:403: in build_image
    _run_bitbake(bitbake_image, init_env_cmd, capture)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

target = 'core-image-full-cmdline'
env_setup_cmd = 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw'
capture = False

    def _run_bitbake(target, env_setup_cmd, capture=False):
        cmd = "%s &amp;&amp; bitbake %s" % (env_setup_cmd, target)
        ps = run_verbose(cmd, capture=subprocess.PIPE)
        output = ""
        try:
            # Cannot use for loop here due to buffering and iterators.
            while True:
                line = ps.stdout.readline().decode()
                if not line:
                    break
    
                if line.find("is not a recognized MENDER_ variable") &gt;= 0:
                    pytest.fail(
                        "Found variable which is not in mender-vars.json: %s" % line.strip()
                    )
    
                if capture:
                    output += line
                else:
                    sys.stdout.write(line)
        finally:
            # Empty any remaining lines.
            try:
                if capture:
                    output += ps.stdout.readlines().decode()
                else:
                    ps.stdout.readlines()
            except:
                pass
            ps.wait()
            if ps.returncode != 0:
                e = subprocess.CalledProcessError(ps.returncode, cmd)
                if capture:
                    e.output = output
&gt;               raise e
E               subprocess.CalledProcessError: Command 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw &amp;&amp; bitbake core-image-full-cmdline' returned non-zero exit status 1.

image-tests/tests/utils/common/common.py:440: CalledProcessError</error></testcase><testcase classname="test_snapshot.TestSnapshot" name="test_snapshot_using_mender_artifact_no_sudo[]" time="0.001"><error message="failed on setup with &quot;subprocess.CalledProcessError: Command 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw &amp;&amp; bitbake core-image-full-cmdline' returned non-zero exit status 1.&quot;">request = &lt;SubRequest 'setup_board' for &lt;Function test_dbus_system_configuration_file&gt;&gt;
qemu_wrapper = '../../meta-mender-qemu/scripts/mender-qemu'
build_image_fn = &lt;function build_image_fn.&lt;locals&gt;.img_builder at 0x7f71f5f60378&gt;
session_connection = &lt;Connection host=localhost user=root port=8822&gt;
board_type = 'qemux86-64-bios-grub-gpt', conversion = False

    @pytest.fixture(scope="session")
    def setup_board(
        request, qemu_wrapper, build_image_fn, session_connection, board_type, conversion
    ):
    
        print("board type: ", board_type)
    
        if "qemu" in board_type:
&gt;           image_dir = build_image_fn()

image-tests/tests/utils/fixtures/fixtures.py:189: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
image-tests/tests/utils/fixtures/fixtures.py:377: in img_builder
    ['EXTRA_IMAGE_FEATURES_append = " ssh-server-openssh"',],
image-tests/tests/utils/common/common.py:403: in build_image
    _run_bitbake(bitbake_image, init_env_cmd, capture)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

target = 'core-image-full-cmdline'
env_setup_cmd = 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw'
capture = False

    def _run_bitbake(target, env_setup_cmd, capture=False):
        cmd = "%s &amp;&amp; bitbake %s" % (env_setup_cmd, target)
        ps = run_verbose(cmd, capture=subprocess.PIPE)
        output = ""
        try:
            # Cannot use for loop here due to buffering and iterators.
            while True:
                line = ps.stdout.readline().decode()
                if not line:
                    break
    
                if line.find("is not a recognized MENDER_ variable") &gt;= 0:
                    pytest.fail(
                        "Found variable which is not in mender-vars.json: %s" % line.strip()
                    )
    
                if capture:
                    output += line
                else:
                    sys.stdout.write(line)
        finally:
            # Empty any remaining lines.
            try:
                if capture:
                    output += ps.stdout.readlines().decode()
                else:
                    ps.stdout.readlines()
            except:
                pass
            ps.wait()
            if ps.returncode != 0:
                e = subprocess.CalledProcessError(ps.returncode, cmd)
                if capture:
                    e.output = output
&gt;               raise e
E               subprocess.CalledProcessError: Command 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw &amp;&amp; bitbake core-image-full-cmdline' returned non-zero exit status 1.

image-tests/tests/utils/common/common.py:440: CalledProcessError</error></testcase><testcase classname="test_snapshot.TestSnapshot" name="test_snapshot_using_mender_artifact_no_sudo[screen -D -m -L -Logfile screen.log.tmp]" time="0.001"><error message="failed on setup with &quot;subprocess.CalledProcessError: Command 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw &amp;&amp; bitbake core-image-full-cmdline' returned non-zero exit status 1.&quot;">request = &lt;SubRequest 'setup_board' for &lt;Function test_dbus_system_configuration_file&gt;&gt;
qemu_wrapper = '../../meta-mender-qemu/scripts/mender-qemu'
build_image_fn = &lt;function build_image_fn.&lt;locals&gt;.img_builder at 0x7f71f5f60378&gt;
session_connection = &lt;Connection host=localhost user=root port=8822&gt;
board_type = 'qemux86-64-bios-grub-gpt', conversion = False

    @pytest.fixture(scope="session")
    def setup_board(
        request, qemu_wrapper, build_image_fn, session_connection, board_type, conversion
    ):
    
        print("board type: ", board_type)
    
        if "qemu" in board_type:
&gt;           image_dir = build_image_fn()

image-tests/tests/utils/fixtures/fixtures.py:189: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
image-tests/tests/utils/fixtures/fixtures.py:377: in img_builder
    ['EXTRA_IMAGE_FEATURES_append = " ssh-server-openssh"',],
image-tests/tests/utils/common/common.py:403: in build_image
    _run_bitbake(bitbake_image, init_env_cmd, capture)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

target = 'core-image-full-cmdline'
env_setup_cmd = 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw'
capture = False

    def _run_bitbake(target, env_setup_cmd, capture=False):
        cmd = "%s &amp;&amp; bitbake %s" % (env_setup_cmd, target)
        ps = run_verbose(cmd, capture=subprocess.PIPE)
        output = ""
        try:
            # Cannot use for loop here due to buffering and iterators.
            while True:
                line = ps.stdout.readline().decode()
                if not line:
                    break
    
                if line.find("is not a recognized MENDER_ variable") &gt;= 0:
                    pytest.fail(
                        "Found variable which is not in mender-vars.json: %s" % line.strip()
                    )
    
                if capture:
                    output += line
                else:
                    sys.stdout.write(line)
        finally:
            # Empty any remaining lines.
            try:
                if capture:
                    output += ps.stdout.readlines().decode()
                else:
                    ps.stdout.readlines()
            except:
                pass
            ps.wait()
            if ps.returncode != 0:
                e = subprocess.CalledProcessError(ps.returncode, cmd)
                if capture:
                    e.output = output
&gt;               raise e
E               subprocess.CalledProcessError: Command 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw &amp;&amp; bitbake core-image-full-cmdline' returned non-zero exit status 1.

image-tests/tests/utils/common/common.py:440: CalledProcessError</error></testcase><testcase classname="test_ubimg.TestUbimg" name="test_total_size" time="0.008"><skipped message="no supported filesystem in tar.bz2, ext4, mender, mender.bmap, gptimg, gptimg.bmap, gptimg.bz2, ext4 (supports ubimg)" type="pytest.skip">/builds/Northern.tech/Mender/meta-mender/tests/acceptance/image-tests/tests/utils/fixtures/fixtures.py:595: no supported filesystem in tar.bz2, ext4, mender, mender.bmap, gptimg, gptimg.bmap, gptimg.bz2, ext4 (supports ubimg)</skipped></testcase><testcase classname="test_ubimg.TestUbimg" name="test_volumes" time="0.001"><skipped message="no supported filesystem in tar.bz2, ext4, mender, mender.bmap, gptimg, gptimg.bmap, gptimg.bz2, ext4 (supports ubimg)" type="pytest.skip">/builds/Northern.tech/Mender/meta-mender/tests/acceptance/image-tests/tests/utils/fixtures/fixtures.py:595: no supported filesystem in tar.bz2, ext4, mender, mender.bmap, gptimg, gptimg.bmap, gptimg.bz2, ext4 (supports ubimg)</skipped></testcase><testcase classname="test_ubimg.TestUbimg" name="test_volume_contents" time="0.001"><skipped message="no supported filesystem in tar.bz2, ext4, mender, mender.bmap, gptimg, gptimg.bmap, gptimg.bz2, ext4 (supports ubimg)" type="pytest.skip">/builds/Northern.tech/Mender/meta-mender/tests/acceptance/image-tests/tests/utils/fixtures/fixtures.py:595: no supported filesystem in tar.bz2, ext4, mender, mender.bmap, gptimg, gptimg.bmap, gptimg.bz2, ext4 (supports ubimg)</skipped></testcase><testcase classname="test_ubimg.TestUbimg" name="test_equal_checksum_ubimg_and_artifact" time="0.667"><skipped message="no supported filesystem in tar.bz2, ext4, mender, mender.bmap, gptimg, gptimg.bmap, gptimg.bz2, ext4 (supports ubimg)" type="pytest.skip">/builds/Northern.tech/Mender/meta-mender/tests/acceptance/image-tests/tests/utils/fixtures/fixtures.py:595: no supported filesystem in tar.bz2, ext4, mender, mender.bmap, gptimg, gptimg.bmap, gptimg.bz2, ext4 (supports ubimg)</skipped></testcase><testcase classname="test_uboot_automation.TestUbootAutomation" name="test_uboot_compile" time="0.002"><skipped message="no supported distro feature in mender-image-gpt, mender-testing-enabled, mender-efi-boot, mender-image, mender-client-install, mender-systemd, mender-grub, mender-bios, acl, alsa, argp, bluetooth, ext2, ipv4, ipv6, largefile, pcmcia, usbgadget, usbhost, wifi, xattr, nfs, zeroconf, pci, 3g, nfc, x11, vfat, largefile, opengl, ptest, multiarch, wayland, vulkan, pulseaudio, gobject-introspection-data, ldconfig, systemd (supports mender-uboot)" type="pytest.skip">/builds/Northern.tech/Mender/meta-mender/tests/acceptance/image-tests/tests/utils/fixtures/fixtures.py:624: no supported distro feature in mender-image-gpt, mender-testing-enabled, mender-efi-boot, mender-image, mender-client-install, mender-systemd, mender-grub, mender-bios, acl, alsa, argp, bluetooth, ext2, ipv4, ipv6, largefile, pcmcia, usbgadget, usbhost, wifi, xattr, nfs, zeroconf, pci, 3g, nfc, x11, vfat, largefile, opengl, ptest, multiarch, wayland, vulkan, pulseaudio, gobject-introspection-data, ldconfig, systemd (supports mender-uboot)</skipped></testcase><testcase classname="test_uboot_automation.TestUbootAutomation" name="test_older_uboot_build" time="0.001"><skipped message="no supported filesystem in tar.bz2, ext4, mender, mender.bmap, gptimg, gptimg.bmap, gptimg.bz2, ext4 (supports sdimg)" type="pytest.skip">/builds/Northern.tech/Mender/meta-mender/tests/acceptance/image-tests/tests/utils/fixtures/fixtures.py:595: no supported filesystem in tar.bz2, ext4, mender, mender.bmap, gptimg, gptimg.bmap, gptimg.bz2, ext4 (supports sdimg)</skipped></testcase><testcase classname="test_uboot_automation.TestUbootAutomation" name="test_save_mender_auto_configured_patch" time="0.001"><skipped message="no supported distro feature in mender-image-gpt, mender-testing-enabled, mender-efi-boot, mender-image, mender-client-install, mender-systemd, mender-grub, mender-bios, acl, alsa, argp, bluetooth, ext2, ipv4, ipv6, largefile, pcmcia, usbgadget, usbhost, wifi, xattr, nfs, zeroconf, pci, 3g, nfc, x11, vfat, largefile, opengl, ptest, multiarch, wayland, vulkan, pulseaudio, gobject-introspection-data, ldconfig, systemd (supports mender-uboot)" type="pytest.skip">/builds/Northern.tech/Mender/meta-mender/tests/acceptance/image-tests/tests/utils/fixtures/fixtures.py:624: no supported distro feature in mender-image-gpt, mender-testing-enabled, mender-efi-boot, mender-image, mender-client-install, mender-systemd, mender-grub, mender-bios, acl, alsa, argp, bluetooth, ext2, ipv4, ipv6, largefile, pcmcia, usbgadget, usbhost, wifi, xattr, nfs, zeroconf, pci, 3g, nfc, x11, vfat, largefile, opengl, ptest, multiarch, wayland, vulkan, pulseaudio, gobject-introspection-data, ldconfig, systemd (supports mender-uboot)</skipped></testcase><testcase classname="test_uboot_automation.TestUbootAutomation" name="test_incorrect_Kconfig_setting" time="0.001"><skipped message="no supported distro feature in mender-image-gpt, mender-testing-enabled, mender-efi-boot, mender-image, mender-client-install, mender-systemd, mender-grub, mender-bios, acl, alsa, argp, bluetooth, ext2, ipv4, ipv6, largefile, pcmcia, usbgadget, usbhost, wifi, xattr, nfs, zeroconf, pci, 3g, nfc, x11, vfat, largefile, opengl, ptest, multiarch, wayland, vulkan, pulseaudio, gobject-introspection-data, ldconfig, systemd (supports mender-ubi)" type="pytest.skip">/builds/Northern.tech/Mender/meta-mender/tests/acceptance/image-tests/tests/utils/fixtures/fixtures.py:624: no supported distro feature in mender-image-gpt, mender-testing-enabled, mender-efi-boot, mender-image, mender-client-install, mender-systemd, mender-grub, mender-bios, acl, alsa, argp, bluetooth, ext2, ipv4, ipv6, largefile, pcmcia, usbgadget, usbhost, wifi, xattr, nfs, zeroconf, pci, 3g, nfc, x11, vfat, largefile, opengl, ptest, multiarch, wayland, vulkan, pulseaudio, gobject-introspection-data, ldconfig, systemd (supports mender-ubi)</skipped></testcase><testcase classname="test_update_control.TestUpdateControl" name="test_update_control_maps[Empty map-case0]" time="0.001"><error message="failed on setup with &quot;subprocess.CalledProcessError: Command 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw &amp;&amp; bitbake core-image-full-cmdline' returned non-zero exit status 1.&quot;">request = &lt;SubRequest 'setup_board' for &lt;Function test_dbus_system_configuration_file&gt;&gt;
qemu_wrapper = '../../meta-mender-qemu/scripts/mender-qemu'
build_image_fn = &lt;function build_image_fn.&lt;locals&gt;.img_builder at 0x7f71f5f60378&gt;
session_connection = &lt;Connection host=localhost user=root port=8822&gt;
board_type = 'qemux86-64-bios-grub-gpt', conversion = False

    @pytest.fixture(scope="session")
    def setup_board(
        request, qemu_wrapper, build_image_fn, session_connection, board_type, conversion
    ):
    
        print("board type: ", board_type)
    
        if "qemu" in board_type:
&gt;           image_dir = build_image_fn()

image-tests/tests/utils/fixtures/fixtures.py:189: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
image-tests/tests/utils/fixtures/fixtures.py:377: in img_builder
    ['EXTRA_IMAGE_FEATURES_append = " ssh-server-openssh"',],
image-tests/tests/utils/common/common.py:403: in build_image
    _run_bitbake(bitbake_image, init_env_cmd, capture)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

target = 'core-image-full-cmdline'
env_setup_cmd = 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw'
capture = False

    def _run_bitbake(target, env_setup_cmd, capture=False):
        cmd = "%s &amp;&amp; bitbake %s" % (env_setup_cmd, target)
        ps = run_verbose(cmd, capture=subprocess.PIPE)
        output = ""
        try:
            # Cannot use for loop here due to buffering and iterators.
            while True:
                line = ps.stdout.readline().decode()
                if not line:
                    break
    
                if line.find("is not a recognized MENDER_ variable") &gt;= 0:
                    pytest.fail(
                        "Found variable which is not in mender-vars.json: %s" % line.strip()
                    )
    
                if capture:
                    output += line
                else:
                    sys.stdout.write(line)
        finally:
            # Empty any remaining lines.
            try:
                if capture:
                    output += ps.stdout.readlines().decode()
                else:
                    ps.stdout.readlines()
            except:
                pass
            ps.wait()
            if ps.returncode != 0:
                e = subprocess.CalledProcessError(ps.returncode, cmd)
                if capture:
                    e.output = output
&gt;               raise e
E               subprocess.CalledProcessError: Command 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw &amp;&amp; bitbake core-image-full-cmdline' returned non-zero exit status 1.

image-tests/tests/utils/common/common.py:440: CalledProcessError</error></testcase><testcase classname="test_update_control.TestUpdateControl" name="test_update_control_maps[Fail in ArtifactInstall_Enter-case1]" time="0.001"><error message="failed on setup with &quot;subprocess.CalledProcessError: Command 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw &amp;&amp; bitbake core-image-full-cmdline' returned non-zero exit status 1.&quot;">request = &lt;SubRequest 'setup_board' for &lt;Function test_dbus_system_configuration_file&gt;&gt;
qemu_wrapper = '../../meta-mender-qemu/scripts/mender-qemu'
build_image_fn = &lt;function build_image_fn.&lt;locals&gt;.img_builder at 0x7f71f5f60378&gt;
session_connection = &lt;Connection host=localhost user=root port=8822&gt;
board_type = 'qemux86-64-bios-grub-gpt', conversion = False

    @pytest.fixture(scope="session")
    def setup_board(
        request, qemu_wrapper, build_image_fn, session_connection, board_type, conversion
    ):
    
        print("board type: ", board_type)
    
        if "qemu" in board_type:
&gt;           image_dir = build_image_fn()

image-tests/tests/utils/fixtures/fixtures.py:189: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
image-tests/tests/utils/fixtures/fixtures.py:377: in img_builder
    ['EXTRA_IMAGE_FEATURES_append = " ssh-server-openssh"',],
image-tests/tests/utils/common/common.py:403: in build_image
    _run_bitbake(bitbake_image, init_env_cmd, capture)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

target = 'core-image-full-cmdline'
env_setup_cmd = 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw'
capture = False

    def _run_bitbake(target, env_setup_cmd, capture=False):
        cmd = "%s &amp;&amp; bitbake %s" % (env_setup_cmd, target)
        ps = run_verbose(cmd, capture=subprocess.PIPE)
        output = ""
        try:
            # Cannot use for loop here due to buffering and iterators.
            while True:
                line = ps.stdout.readline().decode()
                if not line:
                    break
    
                if line.find("is not a recognized MENDER_ variable") &gt;= 0:
                    pytest.fail(
                        "Found variable which is not in mender-vars.json: %s" % line.strip()
                    )
    
                if capture:
                    output += line
                else:
                    sys.stdout.write(line)
        finally:
            # Empty any remaining lines.
            try:
                if capture:
                    output += ps.stdout.readlines().decode()
                else:
                    ps.stdout.readlines()
            except:
                pass
            ps.wait()
            if ps.returncode != 0:
                e = subprocess.CalledProcessError(ps.returncode, cmd)
                if capture:
                    e.output = output
&gt;               raise e
E               subprocess.CalledProcessError: Command 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw &amp;&amp; bitbake core-image-full-cmdline' returned non-zero exit status 1.

image-tests/tests/utils/common/common.py:440: CalledProcessError</error></testcase><testcase classname="test_update_control.TestUpdateControl" name="test_update_control_maps[Fail in ArtifactReboot_Enter-case2]" time="0.001"><error message="failed on setup with &quot;subprocess.CalledProcessError: Command 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw &amp;&amp; bitbake core-image-full-cmdline' returned non-zero exit status 1.&quot;">request = &lt;SubRequest 'setup_board' for &lt;Function test_dbus_system_configuration_file&gt;&gt;
qemu_wrapper = '../../meta-mender-qemu/scripts/mender-qemu'
build_image_fn = &lt;function build_image_fn.&lt;locals&gt;.img_builder at 0x7f71f5f60378&gt;
session_connection = &lt;Connection host=localhost user=root port=8822&gt;
board_type = 'qemux86-64-bios-grub-gpt', conversion = False

    @pytest.fixture(scope="session")
    def setup_board(
        request, qemu_wrapper, build_image_fn, session_connection, board_type, conversion
    ):
    
        print("board type: ", board_type)
    
        if "qemu" in board_type:
&gt;           image_dir = build_image_fn()

image-tests/tests/utils/fixtures/fixtures.py:189: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
image-tests/tests/utils/fixtures/fixtures.py:377: in img_builder
    ['EXTRA_IMAGE_FEATURES_append = " ssh-server-openssh"',],
image-tests/tests/utils/common/common.py:403: in build_image
    _run_bitbake(bitbake_image, init_env_cmd, capture)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

target = 'core-image-full-cmdline'
env_setup_cmd = 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw'
capture = False

    def _run_bitbake(target, env_setup_cmd, capture=False):
        cmd = "%s &amp;&amp; bitbake %s" % (env_setup_cmd, target)
        ps = run_verbose(cmd, capture=subprocess.PIPE)
        output = ""
        try:
            # Cannot use for loop here due to buffering and iterators.
            while True:
                line = ps.stdout.readline().decode()
                if not line:
                    break
    
                if line.find("is not a recognized MENDER_ variable") &gt;= 0:
                    pytest.fail(
                        "Found variable which is not in mender-vars.json: %s" % line.strip()
                    )
    
                if capture:
                    output += line
                else:
                    sys.stdout.write(line)
        finally:
            # Empty any remaining lines.
            try:
                if capture:
                    output += ps.stdout.readlines().decode()
                else:
                    ps.stdout.readlines()
            except:
                pass
            ps.wait()
            if ps.returncode != 0:
                e = subprocess.CalledProcessError(ps.returncode, cmd)
                if capture:
                    e.output = output
&gt;               raise e
E               subprocess.CalledProcessError: Command 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw &amp;&amp; bitbake core-image-full-cmdline' returned non-zero exit status 1.

image-tests/tests/utils/common/common.py:440: CalledProcessError</error></testcase><testcase classname="test_update_control.TestUpdateControl" name="test_update_control_maps[Fail in ArtifactCommit_Enter-case3]" time="0.001"><error message="failed on setup with &quot;subprocess.CalledProcessError: Command 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw &amp;&amp; bitbake core-image-full-cmdline' returned non-zero exit status 1.&quot;">request = &lt;SubRequest 'setup_board' for &lt;Function test_dbus_system_configuration_file&gt;&gt;
qemu_wrapper = '../../meta-mender-qemu/scripts/mender-qemu'
build_image_fn = &lt;function build_image_fn.&lt;locals&gt;.img_builder at 0x7f71f5f60378&gt;
session_connection = &lt;Connection host=localhost user=root port=8822&gt;
board_type = 'qemux86-64-bios-grub-gpt', conversion = False

    @pytest.fixture(scope="session")
    def setup_board(
        request, qemu_wrapper, build_image_fn, session_connection, board_type, conversion
    ):
    
        print("board type: ", board_type)
    
        if "qemu" in board_type:
&gt;           image_dir = build_image_fn()

image-tests/tests/utils/fixtures/fixtures.py:189: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
image-tests/tests/utils/fixtures/fixtures.py:377: in img_builder
    ['EXTRA_IMAGE_FEATURES_append = " ssh-server-openssh"',],
image-tests/tests/utils/common/common.py:403: in build_image
    _run_bitbake(bitbake_image, init_env_cmd, capture)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

target = 'core-image-full-cmdline'
env_setup_cmd = 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw'
capture = False

    def _run_bitbake(target, env_setup_cmd, capture=False):
        cmd = "%s &amp;&amp; bitbake %s" % (env_setup_cmd, target)
        ps = run_verbose(cmd, capture=subprocess.PIPE)
        output = ""
        try:
            # Cannot use for loop here due to buffering and iterators.
            while True:
                line = ps.stdout.readline().decode()
                if not line:
                    break
    
                if line.find("is not a recognized MENDER_ variable") &gt;= 0:
                    pytest.fail(
                        "Found variable which is not in mender-vars.json: %s" % line.strip()
                    )
    
                if capture:
                    output += line
                else:
                    sys.stdout.write(line)
        finally:
            # Empty any remaining lines.
            try:
                if capture:
                    output += ps.stdout.readlines().decode()
                else:
                    ps.stdout.readlines()
            except:
                pass
            ps.wait()
            if ps.returncode != 0:
                e = subprocess.CalledProcessError(ps.returncode, cmd)
                if capture:
                    e.output = output
&gt;               raise e
E               subprocess.CalledProcessError: Command 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw &amp;&amp; bitbake core-image-full-cmdline' returned non-zero exit status 1.

image-tests/tests/utils/common/common.py:440: CalledProcessError</error></testcase><testcase classname="test_update_control.TestUpdateControl" name="test_update_control_maps[Pause in ArtifactInstall_Enter-case4]" time="0.001"><error message="failed on setup with &quot;subprocess.CalledProcessError: Command 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw &amp;&amp; bitbake core-image-full-cmdline' returned non-zero exit status 1.&quot;">request = &lt;SubRequest 'setup_board' for &lt;Function test_dbus_system_configuration_file&gt;&gt;
qemu_wrapper = '../../meta-mender-qemu/scripts/mender-qemu'
build_image_fn = &lt;function build_image_fn.&lt;locals&gt;.img_builder at 0x7f71f5f60378&gt;
session_connection = &lt;Connection host=localhost user=root port=8822&gt;
board_type = 'qemux86-64-bios-grub-gpt', conversion = False

    @pytest.fixture(scope="session")
    def setup_board(
        request, qemu_wrapper, build_image_fn, session_connection, board_type, conversion
    ):
    
        print("board type: ", board_type)
    
        if "qemu" in board_type:
&gt;           image_dir = build_image_fn()

image-tests/tests/utils/fixtures/fixtures.py:189: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
image-tests/tests/utils/fixtures/fixtures.py:377: in img_builder
    ['EXTRA_IMAGE_FEATURES_append = " ssh-server-openssh"',],
image-tests/tests/utils/common/common.py:403: in build_image
    _run_bitbake(bitbake_image, init_env_cmd, capture)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

target = 'core-image-full-cmdline'
env_setup_cmd = 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw'
capture = False

    def _run_bitbake(target, env_setup_cmd, capture=False):
        cmd = "%s &amp;&amp; bitbake %s" % (env_setup_cmd, target)
        ps = run_verbose(cmd, capture=subprocess.PIPE)
        output = ""
        try:
            # Cannot use for loop here due to buffering and iterators.
            while True:
                line = ps.stdout.readline().decode()
                if not line:
                    break
    
                if line.find("is not a recognized MENDER_ variable") &gt;= 0:
                    pytest.fail(
                        "Found variable which is not in mender-vars.json: %s" % line.strip()
                    )
    
                if capture:
                    output += line
                else:
                    sys.stdout.write(line)
        finally:
            # Empty any remaining lines.
            try:
                if capture:
                    output += ps.stdout.readlines().decode()
                else:
                    ps.stdout.readlines()
            except:
                pass
            ps.wait()
            if ps.returncode != 0:
                e = subprocess.CalledProcessError(ps.returncode, cmd)
                if capture:
                    e.output = output
&gt;               raise e
E               subprocess.CalledProcessError: Command 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw &amp;&amp; bitbake core-image-full-cmdline' returned non-zero exit status 1.

image-tests/tests/utils/common/common.py:440: CalledProcessError</error></testcase><testcase classname="test_update_control.TestUpdateControl" name="test_update_control_maps[Pause in ArtifactReboot_Enter-case5]" time="0.001"><error message="failed on setup with &quot;subprocess.CalledProcessError: Command 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw &amp;&amp; bitbake core-image-full-cmdline' returned non-zero exit status 1.&quot;">request = &lt;SubRequest 'setup_board' for &lt;Function test_dbus_system_configuration_file&gt;&gt;
qemu_wrapper = '../../meta-mender-qemu/scripts/mender-qemu'
build_image_fn = &lt;function build_image_fn.&lt;locals&gt;.img_builder at 0x7f71f5f60378&gt;
session_connection = &lt;Connection host=localhost user=root port=8822&gt;
board_type = 'qemux86-64-bios-grub-gpt', conversion = False

    @pytest.fixture(scope="session")
    def setup_board(
        request, qemu_wrapper, build_image_fn, session_connection, board_type, conversion
    ):
    
        print("board type: ", board_type)
    
        if "qemu" in board_type:
&gt;           image_dir = build_image_fn()

image-tests/tests/utils/fixtures/fixtures.py:189: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
image-tests/tests/utils/fixtures/fixtures.py:377: in img_builder
    ['EXTRA_IMAGE_FEATURES_append = " ssh-server-openssh"',],
image-tests/tests/utils/common/common.py:403: in build_image
    _run_bitbake(bitbake_image, init_env_cmd, capture)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

target = 'core-image-full-cmdline'
env_setup_cmd = 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw'
capture = False

    def _run_bitbake(target, env_setup_cmd, capture=False):
        cmd = "%s &amp;&amp; bitbake %s" % (env_setup_cmd, target)
        ps = run_verbose(cmd, capture=subprocess.PIPE)
        output = ""
        try:
            # Cannot use for loop here due to buffering and iterators.
            while True:
                line = ps.stdout.readline().decode()
                if not line:
                    break
    
                if line.find("is not a recognized MENDER_ variable") &gt;= 0:
                    pytest.fail(
                        "Found variable which is not in mender-vars.json: %s" % line.strip()
                    )
    
                if capture:
                    output += line
                else:
                    sys.stdout.write(line)
        finally:
            # Empty any remaining lines.
            try:
                if capture:
                    output += ps.stdout.readlines().decode()
                else:
                    ps.stdout.readlines()
            except:
                pass
            ps.wait()
            if ps.returncode != 0:
                e = subprocess.CalledProcessError(ps.returncode, cmd)
                if capture:
                    e.output = output
&gt;               raise e
E               subprocess.CalledProcessError: Command 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw &amp;&amp; bitbake core-image-full-cmdline' returned non-zero exit status 1.

image-tests/tests/utils/common/common.py:440: CalledProcessError</error></testcase><testcase classname="test_update_control.TestUpdateControl" name="test_update_control_maps[Pause in ArtifactCommit_Enter-case6]" time="0.001"><error message="failed on setup with &quot;subprocess.CalledProcessError: Command 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw &amp;&amp; bitbake core-image-full-cmdline' returned non-zero exit status 1.&quot;">request = &lt;SubRequest 'setup_board' for &lt;Function test_dbus_system_configuration_file&gt;&gt;
qemu_wrapper = '../../meta-mender-qemu/scripts/mender-qemu'
build_image_fn = &lt;function build_image_fn.&lt;locals&gt;.img_builder at 0x7f71f5f60378&gt;
session_connection = &lt;Connection host=localhost user=root port=8822&gt;
board_type = 'qemux86-64-bios-grub-gpt', conversion = False

    @pytest.fixture(scope="session")
    def setup_board(
        request, qemu_wrapper, build_image_fn, session_connection, board_type, conversion
    ):
    
        print("board type: ", board_type)
    
        if "qemu" in board_type:
&gt;           image_dir = build_image_fn()

image-tests/tests/utils/fixtures/fixtures.py:189: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
image-tests/tests/utils/fixtures/fixtures.py:377: in img_builder
    ['EXTRA_IMAGE_FEATURES_append = " ssh-server-openssh"',],
image-tests/tests/utils/common/common.py:403: in build_image
    _run_bitbake(bitbake_image, init_env_cmd, capture)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

target = 'core-image-full-cmdline'
env_setup_cmd = 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw'
capture = False

    def _run_bitbake(target, env_setup_cmd, capture=False):
        cmd = "%s &amp;&amp; bitbake %s" % (env_setup_cmd, target)
        ps = run_verbose(cmd, capture=subprocess.PIPE)
        output = ""
        try:
            # Cannot use for loop here due to buffering and iterators.
            while True:
                line = ps.stdout.readline().decode()
                if not line:
                    break
    
                if line.find("is not a recognized MENDER_ variable") &gt;= 0:
                    pytest.fail(
                        "Found variable which is not in mender-vars.json: %s" % line.strip()
                    )
    
                if capture:
                    output += line
                else:
                    sys.stdout.write(line)
        finally:
            # Empty any remaining lines.
            try:
                if capture:
                    output += ps.stdout.readlines().decode()
                else:
                    ps.stdout.readlines()
            except:
                pass
            ps.wait()
            if ps.returncode != 0:
                e = subprocess.CalledProcessError(ps.returncode, cmd)
                if capture:
                    e.output = output
&gt;               raise e
E               subprocess.CalledProcessError: Command 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw &amp;&amp; bitbake core-image-full-cmdline' returned non-zero exit status 1.

image-tests/tests/utils/common/common.py:440: CalledProcessError</error></testcase><testcase classname="test_update_control.TestUpdateControl" name="test_update_control_maps[Expire in ArtifactInstall_Enter-case7]" time="0.001"><error message="failed on setup with &quot;subprocess.CalledProcessError: Command 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw &amp;&amp; bitbake core-image-full-cmdline' returned non-zero exit status 1.&quot;">request = &lt;SubRequest 'setup_board' for &lt;Function test_dbus_system_configuration_file&gt;&gt;
qemu_wrapper = '../../meta-mender-qemu/scripts/mender-qemu'
build_image_fn = &lt;function build_image_fn.&lt;locals&gt;.img_builder at 0x7f71f5f60378&gt;
session_connection = &lt;Connection host=localhost user=root port=8822&gt;
board_type = 'qemux86-64-bios-grub-gpt', conversion = False

    @pytest.fixture(scope="session")
    def setup_board(
        request, qemu_wrapper, build_image_fn, session_connection, board_type, conversion
    ):
    
        print("board type: ", board_type)
    
        if "qemu" in board_type:
&gt;           image_dir = build_image_fn()

image-tests/tests/utils/fixtures/fixtures.py:189: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
image-tests/tests/utils/fixtures/fixtures.py:377: in img_builder
    ['EXTRA_IMAGE_FEATURES_append = " ssh-server-openssh"',],
image-tests/tests/utils/common/common.py:403: in build_image
    _run_bitbake(bitbake_image, init_env_cmd, capture)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

target = 'core-image-full-cmdline'
env_setup_cmd = 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw'
capture = False

    def _run_bitbake(target, env_setup_cmd, capture=False):
        cmd = "%s &amp;&amp; bitbake %s" % (env_setup_cmd, target)
        ps = run_verbose(cmd, capture=subprocess.PIPE)
        output = ""
        try:
            # Cannot use for loop here due to buffering and iterators.
            while True:
                line = ps.stdout.readline().decode()
                if not line:
                    break
    
                if line.find("is not a recognized MENDER_ variable") &gt;= 0:
                    pytest.fail(
                        "Found variable which is not in mender-vars.json: %s" % line.strip()
                    )
    
                if capture:
                    output += line
                else:
                    sys.stdout.write(line)
        finally:
            # Empty any remaining lines.
            try:
                if capture:
                    output += ps.stdout.readlines().decode()
                else:
                    ps.stdout.readlines()
            except:
                pass
            ps.wait()
            if ps.returncode != 0:
                e = subprocess.CalledProcessError(ps.returncode, cmd)
                if capture:
                    e.output = output
&gt;               raise e
E               subprocess.CalledProcessError: Command 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw &amp;&amp; bitbake core-image-full-cmdline' returned non-zero exit status 1.

image-tests/tests/utils/common/common.py:440: CalledProcessError</error></testcase><testcase classname="test_update_control.TestUpdateControl" name="test_update_control_maps[Reboot and expire in ArtifactInstall_Enter-case8]" time="0.001"><error message="failed on setup with &quot;subprocess.CalledProcessError: Command 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw &amp;&amp; bitbake core-image-full-cmdline' returned non-zero exit status 1.&quot;">request = &lt;SubRequest 'setup_board' for &lt;Function test_dbus_system_configuration_file&gt;&gt;
qemu_wrapper = '../../meta-mender-qemu/scripts/mender-qemu'
build_image_fn = &lt;function build_image_fn.&lt;locals&gt;.img_builder at 0x7f71f5f60378&gt;
session_connection = &lt;Connection host=localhost user=root port=8822&gt;
board_type = 'qemux86-64-bios-grub-gpt', conversion = False

    @pytest.fixture(scope="session")
    def setup_board(
        request, qemu_wrapper, build_image_fn, session_connection, board_type, conversion
    ):
    
        print("board type: ", board_type)
    
        if "qemu" in board_type:
&gt;           image_dir = build_image_fn()

image-tests/tests/utils/fixtures/fixtures.py:189: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
image-tests/tests/utils/fixtures/fixtures.py:377: in img_builder
    ['EXTRA_IMAGE_FEATURES_append = " ssh-server-openssh"',],
image-tests/tests/utils/common/common.py:403: in build_image
    _run_bitbake(bitbake_image, init_env_cmd, capture)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

target = 'core-image-full-cmdline'
env_setup_cmd = 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw'
capture = False

    def _run_bitbake(target, env_setup_cmd, capture=False):
        cmd = "%s &amp;&amp; bitbake %s" % (env_setup_cmd, target)
        ps = run_verbose(cmd, capture=subprocess.PIPE)
        output = ""
        try:
            # Cannot use for loop here due to buffering and iterators.
            while True:
                line = ps.stdout.readline().decode()
                if not line:
                    break
    
                if line.find("is not a recognized MENDER_ variable") &gt;= 0:
                    pytest.fail(
                        "Found variable which is not in mender-vars.json: %s" % line.strip()
                    )
    
                if capture:
                    output += line
                else:
                    sys.stdout.write(line)
        finally:
            # Empty any remaining lines.
            try:
                if capture:
                    output += ps.stdout.readlines().decode()
                else:
                    ps.stdout.readlines()
            except:
                pass
            ps.wait()
            if ps.returncode != 0:
                e = subprocess.CalledProcessError(ps.returncode, cmd)
                if capture:
                    e.output = output
&gt;               raise e
E               subprocess.CalledProcessError: Command 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw &amp;&amp; bitbake core-image-full-cmdline' returned non-zero exit status 1.

image-tests/tests/utils/common/common.py:440: CalledProcessError</error></testcase><testcase classname="test_update_control.TestUpdateControl" name="test_update_control_maps[Continue, then fail in ArtifactInstall_Enter-case9]" time="0.001"><error message="failed on setup with &quot;subprocess.CalledProcessError: Command 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw &amp;&amp; bitbake core-image-full-cmdline' returned non-zero exit status 1.&quot;">request = &lt;SubRequest 'setup_board' for &lt;Function test_dbus_system_configuration_file&gt;&gt;
qemu_wrapper = '../../meta-mender-qemu/scripts/mender-qemu'
build_image_fn = &lt;function build_image_fn.&lt;locals&gt;.img_builder at 0x7f71f5f60378&gt;
session_connection = &lt;Connection host=localhost user=root port=8822&gt;
board_type = 'qemux86-64-bios-grub-gpt', conversion = False

    @pytest.fixture(scope="session")
    def setup_board(
        request, qemu_wrapper, build_image_fn, session_connection, board_type, conversion
    ):
    
        print("board type: ", board_type)
    
        if "qemu" in board_type:
&gt;           image_dir = build_image_fn()

image-tests/tests/utils/fixtures/fixtures.py:189: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
image-tests/tests/utils/fixtures/fixtures.py:377: in img_builder
    ['EXTRA_IMAGE_FEATURES_append = " ssh-server-openssh"',],
image-tests/tests/utils/common/common.py:403: in build_image
    _run_bitbake(bitbake_image, init_env_cmd, capture)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

target = 'core-image-full-cmdline'
env_setup_cmd = 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw'
capture = False

    def _run_bitbake(target, env_setup_cmd, capture=False):
        cmd = "%s &amp;&amp; bitbake %s" % (env_setup_cmd, target)
        ps = run_verbose(cmd, capture=subprocess.PIPE)
        output = ""
        try:
            # Cannot use for loop here due to buffering and iterators.
            while True:
                line = ps.stdout.readline().decode()
                if not line:
                    break
    
                if line.find("is not a recognized MENDER_ variable") &gt;= 0:
                    pytest.fail(
                        "Found variable which is not in mender-vars.json: %s" % line.strip()
                    )
    
                if capture:
                    output += line
                else:
                    sys.stdout.write(line)
        finally:
            # Empty any remaining lines.
            try:
                if capture:
                    output += ps.stdout.readlines().decode()
                else:
                    ps.stdout.readlines()
            except:
                pass
            ps.wait()
            if ps.returncode != 0:
                e = subprocess.CalledProcessError(ps.returncode, cmd)
                if capture:
                    e.output = output
&gt;               raise e
E               subprocess.CalledProcessError: Command 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw &amp;&amp; bitbake core-image-full-cmdline' returned non-zero exit status 1.

image-tests/tests/utils/common/common.py:440: CalledProcessError</error></testcase><testcase classname="test_update_control.TestUpdateControl" name="test_update_control_maps[continue with higher priority-case10]" time="0.001"><error message="failed on setup with &quot;subprocess.CalledProcessError: Command 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw &amp;&amp; bitbake core-image-full-cmdline' returned non-zero exit status 1.&quot;">request = &lt;SubRequest 'setup_board' for &lt;Function test_dbus_system_configuration_file&gt;&gt;
qemu_wrapper = '../../meta-mender-qemu/scripts/mender-qemu'
build_image_fn = &lt;function build_image_fn.&lt;locals&gt;.img_builder at 0x7f71f5f60378&gt;
session_connection = &lt;Connection host=localhost user=root port=8822&gt;
board_type = 'qemux86-64-bios-grub-gpt', conversion = False

    @pytest.fixture(scope="session")
    def setup_board(
        request, qemu_wrapper, build_image_fn, session_connection, board_type, conversion
    ):
    
        print("board type: ", board_type)
    
        if "qemu" in board_type:
&gt;           image_dir = build_image_fn()

image-tests/tests/utils/fixtures/fixtures.py:189: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
image-tests/tests/utils/fixtures/fixtures.py:377: in img_builder
    ['EXTRA_IMAGE_FEATURES_append = " ssh-server-openssh"',],
image-tests/tests/utils/common/common.py:403: in build_image
    _run_bitbake(bitbake_image, init_env_cmd, capture)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

target = 'core-image-full-cmdline'
env_setup_cmd = 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw'
capture = False

    def _run_bitbake(target, env_setup_cmd, capture=False):
        cmd = "%s &amp;&amp; bitbake %s" % (env_setup_cmd, target)
        ps = run_verbose(cmd, capture=subprocess.PIPE)
        output = ""
        try:
            # Cannot use for loop here due to buffering and iterators.
            while True:
                line = ps.stdout.readline().decode()
                if not line:
                    break
    
                if line.find("is not a recognized MENDER_ variable") &gt;= 0:
                    pytest.fail(
                        "Found variable which is not in mender-vars.json: %s" % line.strip()
                    )
    
                if capture:
                    output += line
                else:
                    sys.stdout.write(line)
        finally:
            # Empty any remaining lines.
            try:
                if capture:
                    output += ps.stdout.readlines().decode()
                else:
                    ps.stdout.readlines()
            except:
                pass
            ps.wait()
            if ps.returncode != 0:
                e = subprocess.CalledProcessError(ps.returncode, cmd)
                if capture:
                    e.output = output
&gt;               raise e
E               subprocess.CalledProcessError: Command 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw &amp;&amp; bitbake core-image-full-cmdline' returned non-zero exit status 1.

image-tests/tests/utils/common/common.py:440: CalledProcessError</error></testcase><testcase classname="test_update_control.TestUpdateControl" name="test_update_control_maps[force_continue with higher priority-case11]" time="0.001"><error message="failed on setup with &quot;subprocess.CalledProcessError: Command 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw &amp;&amp; bitbake core-image-full-cmdline' returned non-zero exit status 1.&quot;">request = &lt;SubRequest 'setup_board' for &lt;Function test_dbus_system_configuration_file&gt;&gt;
qemu_wrapper = '../../meta-mender-qemu/scripts/mender-qemu'
build_image_fn = &lt;function build_image_fn.&lt;locals&gt;.img_builder at 0x7f71f5f60378&gt;
session_connection = &lt;Connection host=localhost user=root port=8822&gt;
board_type = 'qemux86-64-bios-grub-gpt', conversion = False

    @pytest.fixture(scope="session")
    def setup_board(
        request, qemu_wrapper, build_image_fn, session_connection, board_type, conversion
    ):
    
        print("board type: ", board_type)
    
        if "qemu" in board_type:
&gt;           image_dir = build_image_fn()

image-tests/tests/utils/fixtures/fixtures.py:189: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
image-tests/tests/utils/fixtures/fixtures.py:377: in img_builder
    ['EXTRA_IMAGE_FEATURES_append = " ssh-server-openssh"',],
image-tests/tests/utils/common/common.py:403: in build_image
    _run_bitbake(bitbake_image, init_env_cmd, capture)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

target = 'core-image-full-cmdline'
env_setup_cmd = 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw'
capture = False

    def _run_bitbake(target, env_setup_cmd, capture=False):
        cmd = "%s &amp;&amp; bitbake %s" % (env_setup_cmd, target)
        ps = run_verbose(cmd, capture=subprocess.PIPE)
        output = ""
        try:
            # Cannot use for loop here due to buffering and iterators.
            while True:
                line = ps.stdout.readline().decode()
                if not line:
                    break
    
                if line.find("is not a recognized MENDER_ variable") &gt;= 0:
                    pytest.fail(
                        "Found variable which is not in mender-vars.json: %s" % line.strip()
                    )
    
                if capture:
                    output += line
                else:
                    sys.stdout.write(line)
        finally:
            # Empty any remaining lines.
            try:
                if capture:
                    output += ps.stdout.readlines().decode()
                else:
                    ps.stdout.readlines()
            except:
                pass
            ps.wait()
            if ps.returncode != 0:
                e = subprocess.CalledProcessError(ps.returncode, cmd)
                if capture:
                    e.output = output
&gt;               raise e
E               subprocess.CalledProcessError: Command 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw &amp;&amp; bitbake core-image-full-cmdline' returned non-zero exit status 1.

image-tests/tests/utils/common/common.py:440: CalledProcessError</error></testcase><testcase classname="test_update_control.TestUpdateControl" name="test_update_control_maps[force_continue with lower priority-case12]" time="0.001"><error message="failed on setup with &quot;subprocess.CalledProcessError: Command 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw &amp;&amp; bitbake core-image-full-cmdline' returned non-zero exit status 1.&quot;">request = &lt;SubRequest 'setup_board' for &lt;Function test_dbus_system_configuration_file&gt;&gt;
qemu_wrapper = '../../meta-mender-qemu/scripts/mender-qemu'
build_image_fn = &lt;function build_image_fn.&lt;locals&gt;.img_builder at 0x7f71f5f60378&gt;
session_connection = &lt;Connection host=localhost user=root port=8822&gt;
board_type = 'qemux86-64-bios-grub-gpt', conversion = False

    @pytest.fixture(scope="session")
    def setup_board(
        request, qemu_wrapper, build_image_fn, session_connection, board_type, conversion
    ):
    
        print("board type: ", board_type)
    
        if "qemu" in board_type:
&gt;           image_dir = build_image_fn()

image-tests/tests/utils/fixtures/fixtures.py:189: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
image-tests/tests/utils/fixtures/fixtures.py:377: in img_builder
    ['EXTRA_IMAGE_FEATURES_append = " ssh-server-openssh"',],
image-tests/tests/utils/common/common.py:403: in build_image
    _run_bitbake(bitbake_image, init_env_cmd, capture)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

target = 'core-image-full-cmdline'
env_setup_cmd = 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw'
capture = False

    def _run_bitbake(target, env_setup_cmd, capture=False):
        cmd = "%s &amp;&amp; bitbake %s" % (env_setup_cmd, target)
        ps = run_verbose(cmd, capture=subprocess.PIPE)
        output = ""
        try:
            # Cannot use for loop here due to buffering and iterators.
            while True:
                line = ps.stdout.readline().decode()
                if not line:
                    break
    
                if line.find("is not a recognized MENDER_ variable") &gt;= 0:
                    pytest.fail(
                        "Found variable which is not in mender-vars.json: %s" % line.strip()
                    )
    
                if capture:
                    output += line
                else:
                    sys.stdout.write(line)
        finally:
            # Empty any remaining lines.
            try:
                if capture:
                    output += ps.stdout.readlines().decode()
                else:
                    ps.stdout.readlines()
            except:
                pass
            ps.wait()
            if ps.returncode != 0:
                e = subprocess.CalledProcessError(ps.returncode, cmd)
                if capture:
                    e.output = output
&gt;               raise e
E               subprocess.CalledProcessError: Command 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw &amp;&amp; bitbake core-image-full-cmdline' returned non-zero exit status 1.

image-tests/tests/utils/common/common.py:440: CalledProcessError</error></testcase><testcase classname="test_update_control.TestUpdateControl" name="test_update_control_maps[Expired and purged map-case13]" time="0.001"><error message="failed on setup with &quot;subprocess.CalledProcessError: Command 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw &amp;&amp; bitbake core-image-full-cmdline' returned non-zero exit status 1.&quot;">request = &lt;SubRequest 'setup_board' for &lt;Function test_dbus_system_configuration_file&gt;&gt;
qemu_wrapper = '../../meta-mender-qemu/scripts/mender-qemu'
build_image_fn = &lt;function build_image_fn.&lt;locals&gt;.img_builder at 0x7f71f5f60378&gt;
session_connection = &lt;Connection host=localhost user=root port=8822&gt;
board_type = 'qemux86-64-bios-grub-gpt', conversion = False

    @pytest.fixture(scope="session")
    def setup_board(
        request, qemu_wrapper, build_image_fn, session_connection, board_type, conversion
    ):
    
        print("board type: ", board_type)
    
        if "qemu" in board_type:
&gt;           image_dir = build_image_fn()

image-tests/tests/utils/fixtures/fixtures.py:189: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
image-tests/tests/utils/fixtures/fixtures.py:377: in img_builder
    ['EXTRA_IMAGE_FEATURES_append = " ssh-server-openssh"',],
image-tests/tests/utils/common/common.py:403: in build_image
    _run_bitbake(bitbake_image, init_env_cmd, capture)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

target = 'core-image-full-cmdline'
env_setup_cmd = 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw'
capture = False

    def _run_bitbake(target, env_setup_cmd, capture=False):
        cmd = "%s &amp;&amp; bitbake %s" % (env_setup_cmd, target)
        ps = run_verbose(cmd, capture=subprocess.PIPE)
        output = ""
        try:
            # Cannot use for loop here due to buffering and iterators.
            while True:
                line = ps.stdout.readline().decode()
                if not line:
                    break
    
                if line.find("is not a recognized MENDER_ variable") &gt;= 0:
                    pytest.fail(
                        "Found variable which is not in mender-vars.json: %s" % line.strip()
                    )
    
                if capture:
                    output += line
                else:
                    sys.stdout.write(line)
        finally:
            # Empty any remaining lines.
            try:
                if capture:
                    output += ps.stdout.readlines().decode()
                else:
                    ps.stdout.readlines()
            except:
                pass
            ps.wait()
            if ps.returncode != 0:
                e = subprocess.CalledProcessError(ps.returncode, cmd)
                if capture:
                    e.output = output
&gt;               raise e
E               subprocess.CalledProcessError: Command 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw &amp;&amp; bitbake core-image-full-cmdline' returned non-zero exit status 1.

image-tests/tests/utils/common/common.py:440: CalledProcessError</error></testcase><testcase classname="test_update_control.TestUpdateControl" name="test_invalid_update_control_map" time="0.001"><error message="failed on setup with &quot;subprocess.CalledProcessError: Command 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw &amp;&amp; bitbake core-image-full-cmdline' returned non-zero exit status 1.&quot;">request = &lt;SubRequest 'setup_board' for &lt;Function test_dbus_system_configuration_file&gt;&gt;
qemu_wrapper = '../../meta-mender-qemu/scripts/mender-qemu'
build_image_fn = &lt;function build_image_fn.&lt;locals&gt;.img_builder at 0x7f71f5f60378&gt;
session_connection = &lt;Connection host=localhost user=root port=8822&gt;
board_type = 'qemux86-64-bios-grub-gpt', conversion = False

    @pytest.fixture(scope="session")
    def setup_board(
        request, qemu_wrapper, build_image_fn, session_connection, board_type, conversion
    ):
    
        print("board type: ", board_type)
    
        if "qemu" in board_type:
&gt;           image_dir = build_image_fn()

image-tests/tests/utils/fixtures/fixtures.py:189: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
image-tests/tests/utils/fixtures/fixtures.py:377: in img_builder
    ['EXTRA_IMAGE_FEATURES_append = " ssh-server-openssh"',],
image-tests/tests/utils/common/common.py:403: in build_image
    _run_bitbake(bitbake_image, init_env_cmd, capture)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

target = 'core-image-full-cmdline'
env_setup_cmd = 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw'
capture = False

    def _run_bitbake(target, env_setup_cmd, capture=False):
        cmd = "%s &amp;&amp; bitbake %s" % (env_setup_cmd, target)
        ps = run_verbose(cmd, capture=subprocess.PIPE)
        output = ""
        try:
            # Cannot use for loop here due to buffering and iterators.
            while True:
                line = ps.stdout.readline().decode()
                if not line:
                    break
    
                if line.find("is not a recognized MENDER_ variable") &gt;= 0:
                    pytest.fail(
                        "Found variable which is not in mender-vars.json: %s" % line.strip()
                    )
    
                if capture:
                    output += line
                else:
                    sys.stdout.write(line)
        finally:
            # Empty any remaining lines.
            try:
                if capture:
                    output += ps.stdout.readlines().decode()
                else:
                    ps.stdout.readlines()
            except:
                pass
            ps.wait()
            if ps.returncode != 0:
                e = subprocess.CalledProcessError(ps.returncode, cmd)
                if capture:
                    e.output = output
&gt;               raise e
E               subprocess.CalledProcessError: Command 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw &amp;&amp; bitbake core-image-full-cmdline' returned non-zero exit status 1.

image-tests/tests/utils/common/common.py:440: CalledProcessError</error></testcase><testcase classname="test_update_control.TestUpdateControl" name="test_update_control_map_cleanup[Cleanup after success-case0]" time="0.001"><error message="failed on setup with &quot;subprocess.CalledProcessError: Command 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw &amp;&amp; bitbake core-image-full-cmdline' returned non-zero exit status 1.&quot;">request = &lt;SubRequest 'setup_board' for &lt;Function test_dbus_system_configuration_file&gt;&gt;
qemu_wrapper = '../../meta-mender-qemu/scripts/mender-qemu'
build_image_fn = &lt;function build_image_fn.&lt;locals&gt;.img_builder at 0x7f71f5f60378&gt;
session_connection = &lt;Connection host=localhost user=root port=8822&gt;
board_type = 'qemux86-64-bios-grub-gpt', conversion = False

    @pytest.fixture(scope="session")
    def setup_board(
        request, qemu_wrapper, build_image_fn, session_connection, board_type, conversion
    ):
    
        print("board type: ", board_type)
    
        if "qemu" in board_type:
&gt;           image_dir = build_image_fn()

image-tests/tests/utils/fixtures/fixtures.py:189: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
image-tests/tests/utils/fixtures/fixtures.py:377: in img_builder
    ['EXTRA_IMAGE_FEATURES_append = " ssh-server-openssh"',],
image-tests/tests/utils/common/common.py:403: in build_image
    _run_bitbake(bitbake_image, init_env_cmd, capture)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

target = 'core-image-full-cmdline'
env_setup_cmd = 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw'
capture = False

    def _run_bitbake(target, env_setup_cmd, capture=False):
        cmd = "%s &amp;&amp; bitbake %s" % (env_setup_cmd, target)
        ps = run_verbose(cmd, capture=subprocess.PIPE)
        output = ""
        try:
            # Cannot use for loop here due to buffering and iterators.
            while True:
                line = ps.stdout.readline().decode()
                if not line:
                    break
    
                if line.find("is not a recognized MENDER_ variable") &gt;= 0:
                    pytest.fail(
                        "Found variable which is not in mender-vars.json: %s" % line.strip()
                    )
    
                if capture:
                    output += line
                else:
                    sys.stdout.write(line)
        finally:
            # Empty any remaining lines.
            try:
                if capture:
                    output += ps.stdout.readlines().decode()
                else:
                    ps.stdout.readlines()
            except:
                pass
            ps.wait()
            if ps.returncode != 0:
                e = subprocess.CalledProcessError(ps.returncode, cmd)
                if capture:
                    e.output = output
&gt;               raise e
E               subprocess.CalledProcessError: Command 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw &amp;&amp; bitbake core-image-full-cmdline' returned non-zero exit status 1.

image-tests/tests/utils/common/common.py:440: CalledProcessError</error></testcase><testcase classname="test_update_control.TestUpdateControl" name="test_update_control_map_cleanup[Cleanup after failure-case1]" time="0.001"><error message="failed on setup with &quot;subprocess.CalledProcessError: Command 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw &amp;&amp; bitbake core-image-full-cmdline' returned non-zero exit status 1.&quot;">request = &lt;SubRequest 'setup_board' for &lt;Function test_dbus_system_configuration_file&gt;&gt;
qemu_wrapper = '../../meta-mender-qemu/scripts/mender-qemu'
build_image_fn = &lt;function build_image_fn.&lt;locals&gt;.img_builder at 0x7f71f5f60378&gt;
session_connection = &lt;Connection host=localhost user=root port=8822&gt;
board_type = 'qemux86-64-bios-grub-gpt', conversion = False

    @pytest.fixture(scope="session")
    def setup_board(
        request, qemu_wrapper, build_image_fn, session_connection, board_type, conversion
    ):
    
        print("board type: ", board_type)
    
        if "qemu" in board_type:
&gt;           image_dir = build_image_fn()

image-tests/tests/utils/fixtures/fixtures.py:189: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
image-tests/tests/utils/fixtures/fixtures.py:377: in img_builder
    ['EXTRA_IMAGE_FEATURES_append = " ssh-server-openssh"',],
image-tests/tests/utils/common/common.py:403: in build_image
    _run_bitbake(bitbake_image, init_env_cmd, capture)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

target = 'core-image-full-cmdline'
env_setup_cmd = 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw'
capture = False

    def _run_bitbake(target, env_setup_cmd, capture=False):
        cmd = "%s &amp;&amp; bitbake %s" % (env_setup_cmd, target)
        ps = run_verbose(cmd, capture=subprocess.PIPE)
        output = ""
        try:
            # Cannot use for loop here due to buffering and iterators.
            while True:
                line = ps.stdout.readline().decode()
                if not line:
                    break
    
                if line.find("is not a recognized MENDER_ variable") &gt;= 0:
                    pytest.fail(
                        "Found variable which is not in mender-vars.json: %s" % line.strip()
                    )
    
                if capture:
                    output += line
                else:
                    sys.stdout.write(line)
        finally:
            # Empty any remaining lines.
            try:
                if capture:
                    output += ps.stdout.readlines().decode()
                else:
                    ps.stdout.readlines()
            except:
                pass
            ps.wait()
            if ps.returncode != 0:
                e = subprocess.CalledProcessError(ps.returncode, cmd)
                if capture:
                    e.output = output
&gt;               raise e
E               subprocess.CalledProcessError: Command 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw &amp;&amp; bitbake core-image-full-cmdline' returned non-zero exit status 1.

image-tests/tests/utils/common/common.py:440: CalledProcessError</error></testcase><testcase classname="test_update_control.TestUpdateControl" name="test_many_state_transitions_with_update_control" time="0.001"><error message="failed on setup with &quot;subprocess.CalledProcessError: Command 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw &amp;&amp; bitbake core-image-full-cmdline' returned non-zero exit status 1.&quot;">request = &lt;SubRequest 'setup_board' for &lt;Function test_dbus_system_configuration_file&gt;&gt;
qemu_wrapper = '../../meta-mender-qemu/scripts/mender-qemu'
build_image_fn = &lt;function build_image_fn.&lt;locals&gt;.img_builder at 0x7f71f5f60378&gt;
session_connection = &lt;Connection host=localhost user=root port=8822&gt;
board_type = 'qemux86-64-bios-grub-gpt', conversion = False

    @pytest.fixture(scope="session")
    def setup_board(
        request, qemu_wrapper, build_image_fn, session_connection, board_type, conversion
    ):
    
        print("board type: ", board_type)
    
        if "qemu" in board_type:
&gt;           image_dir = build_image_fn()

image-tests/tests/utils/fixtures/fixtures.py:189: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
image-tests/tests/utils/fixtures/fixtures.py:377: in img_builder
    ['EXTRA_IMAGE_FEATURES_append = " ssh-server-openssh"',],
image-tests/tests/utils/common/common.py:403: in build_image
    _run_bitbake(bitbake_image, init_env_cmd, capture)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

target = 'core-image-full-cmdline'
env_setup_cmd = 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw'
capture = False

    def _run_bitbake(target, env_setup_cmd, capture=False):
        cmd = "%s &amp;&amp; bitbake %s" % (env_setup_cmd, target)
        ps = run_verbose(cmd, capture=subprocess.PIPE)
        output = ""
        try:
            # Cannot use for loop here due to buffering and iterators.
            while True:
                line = ps.stdout.readline().decode()
                if not line:
                    break
    
                if line.find("is not a recognized MENDER_ variable") &gt;= 0:
                    pytest.fail(
                        "Found variable which is not in mender-vars.json: %s" % line.strip()
                    )
    
                if capture:
                    output += line
                else:
                    sys.stdout.write(line)
        finally:
            # Empty any remaining lines.
            try:
                if capture:
                    output += ps.stdout.readlines().decode()
                else:
                    ps.stdout.readlines()
            except:
                pass
            ps.wait()
            if ps.returncode != 0:
                e = subprocess.CalledProcessError(ps.returncode, cmd)
                if capture:
                    e.output = output
&gt;               raise e
E               subprocess.CalledProcessError: Command 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw &amp;&amp; bitbake core-image-full-cmdline' returned non-zero exit status 1.

image-tests/tests/utils/common/common.py:440: CalledProcessError</error></testcase><testcase classname="commercial.test_delta_update_module.TestDeltaUpdateModule" name="test_build_and_run_module" time="41.662"><failure message="subprocess.CalledProcessError: Command 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw &amp;&amp; bitbake core-image-full-cmdline' returned non-zero exit status 1.">self = &lt;test_delta_update_module.TestDeltaUpdateModule object at 0x7f71f60d24a8&gt;
request = &lt;FixtureRequest for &lt;Function test_build_and_run_module&gt;&gt;
bitbake_variables = {'ABIEXTENSION': '', 'ABIEXTENSION_class-nativesdk': '', 'ALLOW_EMPTY_core-image-minimal-dbg': '1', 'ALLOW_EMPTY_core-image-minimal-dev': '1', ...}
prepared_test_build = {'bitbake_corebase': '/builds/Northern.tech/Mender', 'build_dir': '/builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw'}
bitbake_image = 'core-image-full-cmdline'

    @pytest.mark.only_with_image("ext4")
    def test_build_and_run_module(
        self, request, bitbake_variables, prepared_test_build, bitbake_image
    ):
    
        build_image(
            prepared_test_build["build_dir"],
            prepared_test_build["bitbake_corebase"],
            bitbake_image,
            ['IMAGE_INSTALL_append = " mender-binary-delta"'],
            [
                'BBLAYERS_append = " %s/../meta-mender-commercial"'
&gt;               % bitbake_variables["LAYERDIR_MENDER"]
            ],
        )

commercial/test_delta_update_module.py:52: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
image-tests/tests/utils/common/common.py:403: in build_image
    _run_bitbake(bitbake_image, init_env_cmd, capture)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

target = 'core-image-full-cmdline'
env_setup_cmd = 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw'
capture = False

    def _run_bitbake(target, env_setup_cmd, capture=False):
        cmd = "%s &amp;&amp; bitbake %s" % (env_setup_cmd, target)
        ps = run_verbose(cmd, capture=subprocess.PIPE)
        output = ""
        try:
            # Cannot use for loop here due to buffering and iterators.
            while True:
                line = ps.stdout.readline().decode()
                if not line:
                    break
    
                if line.find("is not a recognized MENDER_ variable") &gt;= 0:
                    pytest.fail(
                        "Found variable which is not in mender-vars.json: %s" % line.strip()
                    )
    
                if capture:
                    output += line
                else:
                    sys.stdout.write(line)
        finally:
            # Empty any remaining lines.
            try:
                if capture:
                    output += ps.stdout.readlines().decode()
                else:
                    ps.stdout.readlines()
            except:
                pass
            ps.wait()
            if ps.returncode != 0:
                e = subprocess.CalledProcessError(ps.returncode, cmd)
                if capture:
                    e.output = output
&gt;               raise e
E               subprocess.CalledProcessError: Command 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw &amp;&amp; bitbake core-image-full-cmdline' returned non-zero exit status 1.

image-tests/tests/utils/common/common.py:440: CalledProcessError</failure></testcase><testcase classname="commercial.test_delta_update_module.TestDeltaUpdateModule" name="test_runtime_checksum" time="0.001"><error message="failed on setup with &quot;subprocess.CalledProcessError: Command 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw &amp;&amp; bitbake core-image-full-cmdline' returned non-zero exit status 1.&quot;">request = &lt;SubRequest 'setup_board' for &lt;Function test_dbus_system_configuration_file&gt;&gt;
qemu_wrapper = '../../meta-mender-qemu/scripts/mender-qemu'
build_image_fn = &lt;function build_image_fn.&lt;locals&gt;.img_builder at 0x7f71f5f60378&gt;
session_connection = &lt;Connection host=localhost user=root port=8822&gt;
board_type = 'qemux86-64-bios-grub-gpt', conversion = False

    @pytest.fixture(scope="session")
    def setup_board(
        request, qemu_wrapper, build_image_fn, session_connection, board_type, conversion
    ):
    
        print("board type: ", board_type)
    
        if "qemu" in board_type:
&gt;           image_dir = build_image_fn()

image-tests/tests/utils/fixtures/fixtures.py:189: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
image-tests/tests/utils/fixtures/fixtures.py:377: in img_builder
    ['EXTRA_IMAGE_FEATURES_append = " ssh-server-openssh"',],
image-tests/tests/utils/common/common.py:403: in build_image
    _run_bitbake(bitbake_image, init_env_cmd, capture)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

target = 'core-image-full-cmdline'
env_setup_cmd = 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw'
capture = False

    def _run_bitbake(target, env_setup_cmd, capture=False):
        cmd = "%s &amp;&amp; bitbake %s" % (env_setup_cmd, target)
        ps = run_verbose(cmd, capture=subprocess.PIPE)
        output = ""
        try:
            # Cannot use for loop here due to buffering and iterators.
            while True:
                line = ps.stdout.readline().decode()
                if not line:
                    break
    
                if line.find("is not a recognized MENDER_ variable") &gt;= 0:
                    pytest.fail(
                        "Found variable which is not in mender-vars.json: %s" % line.strip()
                    )
    
                if capture:
                    output += line
                else:
                    sys.stdout.write(line)
        finally:
            # Empty any remaining lines.
            try:
                if capture:
                    output += ps.stdout.readlines().decode()
                else:
                    ps.stdout.readlines()
            except:
                pass
            ps.wait()
            if ps.returncode != 0:
                e = subprocess.CalledProcessError(ps.returncode, cmd)
                if capture:
                    e.output = output
&gt;               raise e
E               subprocess.CalledProcessError: Command 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw &amp;&amp; bitbake core-image-full-cmdline' returned non-zero exit status 1.

image-tests/tests/utils/common/common.py:440: CalledProcessError</error></testcase><testcase classname="commercial.test_delta_update_module.TestDeltaUpdateModule" name="test_perform_update" time="0.001"><error message="failed on setup with &quot;subprocess.CalledProcessError: Command 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw &amp;&amp; bitbake core-image-full-cmdline' returned non-zero exit status 1.&quot;">request = &lt;SubRequest 'setup_board' for &lt;Function test_dbus_system_configuration_file&gt;&gt;
qemu_wrapper = '../../meta-mender-qemu/scripts/mender-qemu'
build_image_fn = &lt;function build_image_fn.&lt;locals&gt;.img_builder at 0x7f71f5f60378&gt;
session_connection = &lt;Connection host=localhost user=root port=8822&gt;
board_type = 'qemux86-64-bios-grub-gpt', conversion = False

    @pytest.fixture(scope="session")
    def setup_board(
        request, qemu_wrapper, build_image_fn, session_connection, board_type, conversion
    ):
    
        print("board type: ", board_type)
    
        if "qemu" in board_type:
&gt;           image_dir = build_image_fn()

image-tests/tests/utils/fixtures/fixtures.py:189: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
image-tests/tests/utils/fixtures/fixtures.py:377: in img_builder
    ['EXTRA_IMAGE_FEATURES_append = " ssh-server-openssh"',],
image-tests/tests/utils/common/common.py:403: in build_image
    _run_bitbake(bitbake_image, init_env_cmd, capture)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

target = 'core-image-full-cmdline'
env_setup_cmd = 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw'
capture = False

    def _run_bitbake(target, env_setup_cmd, capture=False):
        cmd = "%s &amp;&amp; bitbake %s" % (env_setup_cmd, target)
        ps = run_verbose(cmd, capture=subprocess.PIPE)
        output = ""
        try:
            # Cannot use for loop here due to buffering and iterators.
            while True:
                line = ps.stdout.readline().decode()
                if not line:
                    break
    
                if line.find("is not a recognized MENDER_ variable") &gt;= 0:
                    pytest.fail(
                        "Found variable which is not in mender-vars.json: %s" % line.strip()
                    )
    
                if capture:
                    output += line
                else:
                    sys.stdout.write(line)
        finally:
            # Empty any remaining lines.
            try:
                if capture:
                    output += ps.stdout.readlines().decode()
                else:
                    ps.stdout.readlines()
            except:
                pass
            ps.wait()
            if ps.returncode != 0:
                e = subprocess.CalledProcessError(ps.returncode, cmd)
                if capture:
                    e.output = output
&gt;               raise e
E               subprocess.CalledProcessError: Command 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw &amp;&amp; bitbake core-image-full-cmdline' returned non-zero exit status 1.

image-tests/tests/utils/common/common.py:440: CalledProcessError</error></testcase><testcase classname="commercial.test_mender_gateway.TestMenderGateway" name="test_build_mender_gateway" time="41.834"><failure message="subprocess.CalledProcessError: Command 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw &amp;&amp; bitbake core-image-full-cmdline' returned non-zero exit status 1.">self = &lt;test_mender_gateway.TestMenderGateway object at 0x7f71f60daa20&gt;
request = &lt;FixtureRequest for &lt;Function test_build_mender_gateway&gt;&gt;
bitbake_variables = {'ABIEXTENSION': '', 'ABIEXTENSION_class-nativesdk': '', 'ALLOW_EMPTY_core-image-minimal-dbg': '1', 'ALLOW_EMPTY_core-image-minimal-dev': '1', ...}
prepared_test_build = {'bitbake_corebase': '/builds/Northern.tech/Mender', 'build_dir': '/builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw'}
bitbake_image = 'core-image-full-cmdline'

    @pytest.mark.only_with_image("ext4")
    def test_build_mender_gateway(
        self, request, bitbake_variables, prepared_test_build, bitbake_image
    ):
        build_image(
            prepared_test_build["build_dir"],
            prepared_test_build["bitbake_corebase"],
            bitbake_image,
            ['IMAGE_INSTALL_append = " mender-gateway"'],
            [
                'BBLAYERS_append = " %s/../meta-mender-commercial"'
&gt;               % bitbake_variables["LAYERDIR_MENDER"]
            ],
        )

commercial/test_mender_gateway.py:40: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
image-tests/tests/utils/common/common.py:403: in build_image
    _run_bitbake(bitbake_image, init_env_cmd, capture)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

target = 'core-image-full-cmdline'
env_setup_cmd = 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw'
capture = False

    def _run_bitbake(target, env_setup_cmd, capture=False):
        cmd = "%s &amp;&amp; bitbake %s" % (env_setup_cmd, target)
        ps = run_verbose(cmd, capture=subprocess.PIPE)
        output = ""
        try:
            # Cannot use for loop here due to buffering and iterators.
            while True:
                line = ps.stdout.readline().decode()
                if not line:
                    break
    
                if line.find("is not a recognized MENDER_ variable") &gt;= 0:
                    pytest.fail(
                        "Found variable which is not in mender-vars.json: %s" % line.strip()
                    )
    
                if capture:
                    output += line
                else:
                    sys.stdout.write(line)
        finally:
            # Empty any remaining lines.
            try:
                if capture:
                    output += ps.stdout.readlines().decode()
                else:
                    ps.stdout.readlines()
            except:
                pass
            ps.wait()
            if ps.returncode != 0:
                e = subprocess.CalledProcessError(ps.returncode, cmd)
                if capture:
                    e.output = output
&gt;               raise e
E               subprocess.CalledProcessError: Command 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw &amp;&amp; bitbake core-image-full-cmdline' returned non-zero exit status 1.

image-tests/tests/utils/common/common.py:440: CalledProcessError</failure></testcase><testcase classname="commercial.test_monitor_addon.TestMonitorAddon" name="test_build_addon" time="42.255"><failure message="subprocess.CalledProcessError: Command 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw &amp;&amp; bitbake core-image-full-cmdline' returned non-zero exit status 1.">self = &lt;test_monitor_addon.TestMonitorAddon object at 0x7f71f6066320&gt;
request = &lt;FixtureRequest for &lt;Function test_build_addon&gt;&gt;
bitbake_variables = {'ABIEXTENSION': '', 'ABIEXTENSION_class-nativesdk': '', 'ALLOW_EMPTY_core-image-minimal-dbg': '1', 'ALLOW_EMPTY_core-image-minimal-dev': '1', ...}
prepared_test_build = {'bitbake_corebase': '/builds/Northern.tech/Mender', 'build_dir': '/builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw'}
bitbake_image = 'core-image-full-cmdline'

    @pytest.mark.only_with_image("ext4")
    def test_build_addon(
        self, request, bitbake_variables, prepared_test_build, bitbake_image
    ):
        build_image(
            prepared_test_build["build_dir"],
            prepared_test_build["bitbake_corebase"],
            bitbake_image,
            ['IMAGE_INSTALL_append = " mender-monitor"'],
            [
                'BBLAYERS_append = " %s/../meta-mender-commercial"'
&gt;               % bitbake_variables["LAYERDIR_MENDER"]
            ],
        )

commercial/test_monitor_addon.py:40: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
image-tests/tests/utils/common/common.py:403: in build_image
    _run_bitbake(bitbake_image, init_env_cmd, capture)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

target = 'core-image-full-cmdline'
env_setup_cmd = 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw'
capture = False

    def _run_bitbake(target, env_setup_cmd, capture=False):
        cmd = "%s &amp;&amp; bitbake %s" % (env_setup_cmd, target)
        ps = run_verbose(cmd, capture=subprocess.PIPE)
        output = ""
        try:
            # Cannot use for loop here due to buffering and iterators.
            while True:
                line = ps.stdout.readline().decode()
                if not line:
                    break
    
                if line.find("is not a recognized MENDER_ variable") &gt;= 0:
                    pytest.fail(
                        "Found variable which is not in mender-vars.json: %s" % line.strip()
                    )
    
                if capture:
                    output += line
                else:
                    sys.stdout.write(line)
        finally:
            # Empty any remaining lines.
            try:
                if capture:
                    output += ps.stdout.readlines().decode()
                else:
                    ps.stdout.readlines()
            except:
                pass
            ps.wait()
            if ps.returncode != 0:
                e = subprocess.CalledProcessError(ps.returncode, cmd)
                if capture:
                    e.output = output
&gt;               raise e
E               subprocess.CalledProcessError: Command 'cd /builds/Northern.tech/Mender &amp;&amp; . oe-init-build-env /builds/Northern.tech/Mender/build-qemux86-64-bios-grub-gpt/test-build-ctt9r9iw &amp;&amp; bitbake core-image-full-cmdline' returned non-zero exit status 1.

image-tests/tests/utils/common/common.py:440: CalledProcessError</failure></testcase><testcase classname="image-tests.tests.test_part_image.TestMostPartitionImages" name="test_total_size" time="8.942"><skipped message="no supported filesystem in tar.bz2, ext4, mender, mender.bmap, gptimg, gptimg.bmap, gptimg.bz2, ext4 (supports sdimg, uefiimg)" type="pytest.skip">/builds/Northern.tech/Mender/meta-mender/tests/acceptance/image-tests/tests/utils/fixtures/fixtures.py:595: no supported filesystem in tar.bz2, ext4, mender, mender.bmap, gptimg, gptimg.bmap, gptimg.bz2, ext4 (supports sdimg, uefiimg)</skipped></testcase><testcase classname="image-tests.tests.test_part_image.TestMostPartitionImages" name="test_partition_alignment" time="18.140"><skipped message="no supported filesystem in tar.bz2, ext4, mender, mender.bmap, gptimg, gptimg.bmap, gptimg.bz2, ext4 (supports sdimg, uefiimg)" type="pytest.skip">/builds/Northern.tech/Mender/meta-mender/tests/acceptance/image-tests/tests/utils/fixtures/fixtures.py:595: no supported filesystem in tar.bz2, ext4, mender, mender.bmap, gptimg, gptimg.bmap, gptimg.bz2, ext4 (supports sdimg, uefiimg)</skipped></testcase><testcase classname="image-tests.tests.test_part_image.TestMostPartitionImages" name="test_device_type" time="0.001"><skipped message="no supported filesystem in tar.bz2, ext4, mender, mender.bmap, gptimg, gptimg.bmap, gptimg.bz2, ext4 (supports sdimg, uefiimg)" type="pytest.skip">/builds/Northern.tech/Mender/meta-mender/tests/acceptance/image-tests/tests/utils/fixtures/fixtures.py:595: no supported filesystem in tar.bz2, ext4, mender, mender.bmap, gptimg, gptimg.bmap, gptimg.bz2, ext4 (supports sdimg, uefiimg)</skipped></testcase><testcase classname="image-tests.tests.test_part_image.TestMostPartitionImages" name="test_data_ownership" time="0.001"><skipped message="no supported filesystem in tar.bz2, ext4, mender, mender.bmap, gptimg, gptimg.bmap, gptimg.bz2, ext4 (supports sdimg, uefiimg)" type="pytest.skip">/builds/Northern.tech/Mender/meta-mender/tests/acceptance/image-tests/tests/utils/fixtures/fixtures.py:595: no supported filesystem in tar.bz2, ext4, mender, mender.bmap, gptimg, gptimg.bmap, gptimg.bz2, ext4 (supports sdimg, uefiimg)</skipped></testcase><testcase classname="image-tests.tests.test_part_image.TestMostPartitionImages" name="test_fstab_correct" time="0.001"><skipped message="no supported filesystem in tar.bz2, ext4, mender, mender.bmap, gptimg, gptimg.bmap, gptimg.bz2, ext4 (supports sdimg, uefiimg)" type="pytest.skip">/builds/Northern.tech/Mender/meta-mender/tests/acceptance/image-tests/tests/utils/fixtures/fixtures.py:595: no supported filesystem in tar.bz2, ext4, mender, mender.bmap, gptimg, gptimg.bmap, gptimg.bz2, ext4 (supports sdimg, uefiimg)</skipped></testcase><testcase classname="image-tests.tests.test_part_image.TestMostPartitionImages" name="test_mender_grubenv" time="0.001"><skipped message="no supported filesystem in tar.bz2, ext4, mender, mender.bmap, gptimg, gptimg.bmap, gptimg.bz2, ext4 (supports sdimg, uefiimg)" type="pytest.skip">/builds/Northern.tech/Mender/meta-mender/tests/acceptance/image-tests/tests/utils/fixtures/fixtures.py:595: no supported filesystem in tar.bz2, ext4, mender, mender.bmap, gptimg, gptimg.bmap, gptimg.bz2, ext4 (supports sdimg, uefiimg)</skipped></testcase><testcase classname="image-tests.tests.test_part_image.TestMostPartitionImages" name="test_split_mender_conf" time="0.488"><skipped message="no supported filesystem in tar.bz2, ext4, mender, mender.bmap, gptimg, gptimg.bmap, gptimg.bz2, ext4 (supports sdimg, uefiimg)" type="pytest.skip">/builds/Northern.tech/Mender/meta-mender/tests/acceptance/image-tests/tests/utils/fixtures/fixtures.py:595: no supported filesystem in tar.bz2, ext4, mender, mender.bmap, gptimg, gptimg.bmap, gptimg.bz2, ext4 (supports sdimg, uefiimg)</skipped></testcase><testcase classname="image-tests.tests.test_part_image.TestMostPartitionImages" name="test_expected_data_dirs" time="0.001"><skipped message="no supported filesystem in tar.bz2, ext4, mender, mender.bmap, gptimg, gptimg.bmap, gptimg.bz2, ext4 (supports sdimg, uefiimg)" type="pytest.skip">/builds/Northern.tech/Mender/meta-mender/tests/acceptance/image-tests/tests/utils/fixtures/fixtures.py:595: no supported filesystem in tar.bz2, ext4, mender, mender.bmap, gptimg, gptimg.bmap, gptimg.bz2, ext4 (supports sdimg, uefiimg)</skipped></testcase><testcase classname="image-tests.tests.test_part_image.TestAllPartitionImages" name="test_equal_checksum_part_image_and_artifact" time="7.430" /><testcase classname="image-tests.tests.test_rootfs.TestRootfs" name="test_expected_files_ext234" time="0.043" /><testcase classname="image-tests.tests.test_rootfs.TestRootfs" name="test_expected_files_ext234_mender_connect" time="0.018" /><testcase classname="image-tests.tests.test_rootfs.TestRootfs" name="test_expected_files_ext234_mender_configure" time="0.031" /><testcase classname="image-tests.tests.test_rootfs.TestRootfs" name="test_expected_files_ext234_mender_monitor" time="0.002"><skipped message="Test only applicable for mender-convert images." type="pytest.skip">/builds/Northern.tech/Mender/meta-mender/tests/acceptance/image-tests/tests/test_rootfs.py:247: Test only applicable for mender-convert images.</skipped></testcase><testcase classname="image-tests.tests.test_rootfs.TestRootfs" name="test_expected_files_ubifs" time="0.007"><skipped message="no supported filesystem in tar.bz2, ext4, mender, mender.bmap, gptimg, gptimg.bmap, gptimg.bz2, ext4 (supports ubifs)" type="pytest.skip">/builds/Northern.tech/Mender/meta-mender/tests/acceptance/image-tests/tests/utils/fixtures/fixtures.py:595: no supported filesystem in tar.bz2, ext4, mender, mender.bmap, gptimg, gptimg.bmap, gptimg.bz2, ext4 (supports ubifs)</skipped></testcase><testcase classname="image-tests.tests.test_rootfs.TestRootfs" name="test_unconfigured_image" time="0.001"><skipped message="no supported distro feature in mender-image-gpt, mender-testing-enabled, mender-efi-boot, mender-image, mender-client-install, mender-systemd, mender-grub, mender-bios, acl, alsa, argp, bluetooth, ext2, ipv4, ipv6, largefile, pcmcia, usbgadget, usbhost, wifi, xattr, nfs, zeroconf, pci, 3g, nfc, x11, vfat, largefile, opengl, ptest, multiarch, wayland, vulkan, pulseaudio, gobject-introspection-data, ldconfig, systemd (supports mender-convert)" type="pytest.skip">/builds/Northern.tech/Mender/meta-mender/tests/acceptance/image-tests/tests/utils/fixtures/fixtures.py:624: no supported distro feature in mender-image-gpt, mender-testing-enabled, mender-efi-boot, mender-image, mender-client-install, mender-systemd, mender-grub, mender-bios, acl, alsa, argp, bluetooth, ext2, ipv4, ipv6, largefile, pcmcia, usbgadget, usbhost, wifi, xattr, nfs, zeroconf, pci, 3g, nfc, x11, vfat, largefile, opengl, ptest, multiarch, wayland, vulkan, pulseaudio, gobject-introspection-data, ldconfig, systemd (supports mender-convert)</skipped></testcase><testcase classname="image-tests.tests.test_secure_boot.TestSecureBoot" name="test_secure_boot_enabled" time="460.152"><skipped message="MEN-5253: Secure Boot not yet working for Yocto" type="pytest.skip">/builds/Northern.tech/Mender/meta-mender/tests/acceptance/image-tests/tests/test_secure_boot.py:24: MEN-5253: Secure Boot not yet working for Yocto</skipped></testcase><testcase classname="image-tests.tests.test_update.TestUpdates" name="test_broken_image_update" time="115.690" /><testcase classname="image-tests.tests.test_update.TestUpdates" name="test_image_update_broken_kernel" time="185.315" /><testcase classname="image-tests.tests.test_update.TestUpdates" name="test_too_big_image_update" time="43.792" /><testcase classname="image-tests.tests.test_update.TestUpdates" name="test_network_based_image_update" time="320.418" /><testcase classname="image-tests.tests.test_update.TestUpdates" name="test_signed_updates[sig_case0]" time="23.437" /><testcase classname="image-tests.tests.test_update.TestUpdates" name="test_signed_updates[sig_case1]" time="24.654" /><testcase classname="image-tests.tests.test_update.TestUpdates" name="test_signed_updates[sig_case2]" time="15.686" /><testcase classname="image-tests.tests.test_update.TestUpdates" name="test_signed_updates[sig_case3]" time="23.853" /><testcase classname="image-tests.tests.test_update.TestUpdates" name="test_signed_updates[sig_case4]" time="15.107" /><testcase classname="image-tests.tests.test_update.TestUpdates" name="test_signed_updates[sig_case5]" time="17.408" /><testcase classname="image-tests.tests.test_update.TestUpdates" name="test_signed_updates[sig_case6]" time="24.525" /><testcase classname="image-tests.tests.test_update.TestUpdates" name="test_signed_updates[sig_case7]" time="15.660" /><testcase classname="image-tests.tests.test_update.TestUpdates" name="test_signed_updates[sig_case8]" time="23.747" /><testcase classname="image-tests.tests.test_update.TestUpdates" name="test_signed_updates[sig_case9]" time="15.268" /><testcase classname="image-tests.tests.test_update.TestUpdates" name="test_signed_updates[sig_case10]" time="18.282" /><testcase classname="image-tests.tests.test_update.TestUpdates" name="test_signed_updates[sig_case11]" time="15.454" /><testcase classname="image-tests.tests.test_update.TestUpdates" name="test_signed_updates[sig_case12]" time="22.792" /><testcase classname="image-tests.tests.test_update.TestUpdates" name="test_signed_updates[sig_case13]" time="25.235" /><testcase classname="image-tests.tests.test_update.TestUpdates" name="test_signed_updates[sig_case14]" time="15.177" /><testcase classname="image-tests.tests.test_update.TestUpdates" name="test_signed_updates[sig_case15]" time="23.475" /><testcase classname="image-tests.tests.test_update.TestUpdates" name="test_signed_updates[sig_case16]" time="15.207" /><testcase classname="image-tests.tests.test_update.TestUpdates" name="test_signed_updates[sig_case17]" time="17.027" /><testcase classname="image-tests.tests.test_update.TestUpdates" name="test_signed_updates[sig_case18]" time="23.492" /><testcase classname="image-tests.tests.test_update.TestUpdates" name="test_signed_updates[sig_case19]" time="16.088" /><testcase classname="image-tests.tests.test_update.TestUpdates" name="test_signed_updates[sig_case20]" time="24.155" /><testcase classname="image-tests.tests.test_update.TestUpdates" name="test_signed_updates[sig_case21]" time="14.753" /><testcase classname="image-tests.tests.test_update.TestUpdates" name="test_signed_updates[sig_case22]" time="16.911" /><testcase classname="image-tests.tests.test_update.TestUpdates" name="test_signed_updates[sig_case23]" time="15.841" /><testcase classname="image-tests.tests.test_update.TestUpdates" name="test_redundant_grub_env" time="219.025" /><testcase classname="image-tests.tests.test_update.TestUpdates" name="test_uboot_mender_saveenv_canary" time="0.500"><skipped message="no supported filesystem in tar.bz2, ext4, mender, mender.bmap, gptimg, gptimg.bmap, gptimg.bz2, ext4 (supports sdimg, uefiimg)" type="pytest.skip">/builds/Northern.tech/Mender/meta-mender/tests/acceptance/image-tests/tests/utils/fixtures/fixtures.py:595: no supported filesystem in tar.bz2, ext4, mender, mender.bmap, gptimg, gptimg.bmap, gptimg.bz2, ext4 (supports sdimg, uefiimg)</skipped></testcase><testcase classname="image-tests.tests.test_update.TestUpdates" name="test_standalone_update_rollback" time="9.907" /><testcase classname="image-tests.tests.test_update_modules.TestUpdateModules" name="test_directory_update_module" time="51.302" /><testcase classname="image-tests.tests.test_update_modules.TestUpdateModules" name="test_single_file_update_module" time="76.037" /></testsuite></testsuites>