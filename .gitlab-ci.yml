stages:
  - test
  - build
  - acceptance_tests
  - publish
  - sync

include:
  - project: 'Northern.tech/Mender/mendertesting'
    file: '.gitlab-ci-check-commits-signoffs.yml'
  - project: 'Northern.tech/Mender/mendertesting'
    file: '.gitlab-ci-check-docker-build.yml'
  - project: 'Northern.tech/Mender/mendertesting'
    file: '.gitlab-ci-check-docker-deploy.yml'
  - project: 'Northern.tech/Mender/mendertesting'
    file: '.gitlab-ci-github-status-updates.yml'

test:check-python3-formatting:
  stage: test
  needs: []
  image: python:3
  before_script:
    - pip install tox
    - cd backend
  script:
    - TOXENV=flake8 tox

test:backend-unit:
  stage: test
  needs: []
  services:
    - name: bitnami/postgresql:12.2.0
      alias: db
  variables:
    POSTGRES_PASSWORD: password
    POSTGRES_DB: mantra-db
  image: python:3.10
  before_script:
    - cd backend
    - pip install -r requirements.txt
    - pip install tox
  script:
    - gunicorn -t 120 --daemon --bind 127.0.0.1:7374 --access-logfile - tetra.app:application
    - TOXENV=functional tox

build:docker:
  variables:
    DOCKER_REPOSITORY: mendersoftware/mantra-api
    DOCKER_DIR: backend
  after_script:
    - cp image.tar image-api.tar
  artifacts:
    expire_in: 2w
    paths:
      - image.tar
      - image-api.tar
  rules:
    - if: $CI_COMMIT_REF_NAME == "master"
    - changes:
        - backend/**/*

publish:image:
  variables:
    DOCKER_REPOSITORY: mendersoftware/mantra-api
    DOCKER_DIR: backend

sync:image:
  variables:
    DOCKER_REPOSITORY: mendersoftware/mantra-api
    TARGET_MANIFEST_FILE: kubernetes/mender-qastatus/api-deployment.yaml

build:docker:ui:
  extends: build:docker
  variables:
    DOCKER_REPOSITORY: mendersoftware/mantra-ui
    DOCKER_DIR: ui
  script:
    - echo "building ${CI_PROJECT_NAME} for ${DOCKER_BUILD_SERVICE_IMAGE}"
    - docker build
      --build-arg AWS_ACCESS_KEY_ID
      --build-arg AWS_SECRET_ACCESS_KEY
      --build-arg GITLAB_TOKEN
      --tag $DOCKER_BUILD_SERVICE_IMAGE
      --file ${DOCKER_DIR:-.}/${DOCKERFILE:-Dockerfile}
      ${DOCKER_DIR:-.}
    - docker save $DOCKER_BUILD_SERVICE_IMAGE > image.tar
  after_script:
    - cp image.tar image-ui.tar
  artifacts:
    expire_in: 2w
    paths:
      - image.tar
      - image-ui.tar
  rules:
    - if: $CI_COMMIT_REF_NAME == "master"
    - changes:
        - ui/**/*

test:composition:
  stage: acceptance_tests
  image: tiangolo/docker-with-compose
  needs:
    - job: build:docker
      artifacts: true
    - job: build:docker:ui
      artifacts: true
  services:
    - docker:20.10.8-dind
  before_script:
    - docker load -i image-api.tar
    - docker tag mendersoftware/mantra-api:${CI_COMMIT_REF_SLUG} mendersoftware/mantra-api:pr
    - docker load -i image-ui.tar
    - docker tag mendersoftware/mantra-ui:${CI_COMMIT_REF_SLUG} mendersoftware/mantra-ui:pr
    - apk add --no-cache python3
    - pip3 install tox
    - echo $'[api]\nbase_url = http://test:test@docker/api' > backend/tetra-test.conf
  script:
    - docker-compose -f docker-compose.yml -f docker-compose.test.yml up -d db
    - sleep 10
    - docker-compose -f docker-compose.yml -f docker-compose.test.yml up --no-recreate -d
    - cd backend
    - TOXENV=functional tox

publish:image:ui:
  extends: publish:image
  dependencies:
    - build:docker:ui
  variables:
    DOCKER_REPOSITORY: mendersoftware/mantra-ui
    DOCKER_DIR: ui

sync:image:ui:
  extends: sync:image
  dependencies:
    - publish:image:ui
  variables:
    DOCKER_REPOSITORY: mendersoftware/mantra-ui
    TARGET_MANIFEST_FILE: kubernetes/mender-qastatus/ui-deployment.yaml
